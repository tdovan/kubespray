apiVersion: v1
data:
  custom-resources.yaml: "# Authentication policy to enable permissive mode for all
    services (that have sidecar) in the mesh.\napiVersion: \"authentication.istio.io/v1alpha1\"\nkind:
    \"MeshPolicy\"\nmetadata:\n  name: \"default\"\n  labels:\n    app: security\n
    \   chart: security\n    heritage: Tiller\n    release: istio\nspec:\n  peers:\n
    \ - mtls:\n      mode: PERMISSIVE\t"
  run.sh: |-
    #!/bin/sh

    set -x

    if [ "$#" -ne "1" ]; then
        echo "first argument should be path to custom resource yaml"
        exit 1
    fi

    pathToResourceYAML=${1}

    kubectl get validatingwebhookconfiguration istio-galley 2>/dev/null
    if [ "$?" -eq 0 ]; then
        echo "istio-galley validatingwebhookconfiguration found - waiting for istio-galley deployment to be ready"
        while true; do
            kubectl -n istio-system get deployment istio-galley 2>/dev/null
            if [ "$?" -eq 0 ]; then
                break
            fi
            sleep 1
        done
        kubectl -n istio-system rollout status deployment istio-galley
        if [ "$?" -ne 0 ]; then
            echo "istio-galley deployment rollout status check failed"
            exit 1
        fi
        echo "istio-galley deployment ready for configuration validation"
    fi
    sleep 5
    kubectl apply -f ${pathToResourceYAML}
kind: ConfigMap
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","data":{"custom-resources.yaml":"# Authentication policy to enable permissive mode for all services (that have sidecar) in the mesh.\napiVersion: \"authentication.istio.io/v1alpha1\"\nkind: \"MeshPolicy\"\nmetadata:\n  name: \"default\"\n  labels:\n    app: security\n    chart: security\n    heritage: Tiller\n    release: istio\nspec:\n  peers:\n  - mtls:\n      mode: PERMISSIVE\t","run.sh":"#!/bin/sh\n\nset -x\n\nif [ \"$#\" -ne \"1\" ]; then\n    echo \"first argument should be path to custom resource yaml\"\n    exit 1\nfi\n\npathToResourceYAML=${1}\n\nkubectl get validatingwebhookconfiguration istio-galley 2\u003e/dev/null\nif [ \"$?\" -eq 0 ]; then\n    echo \"istio-galley validatingwebhookconfiguration found - waiting for istio-galley deployment to be ready\"\n    while true; do\n        kubectl -n istio-system get deployment istio-galley 2\u003e/dev/null\n        if [ \"$?\" -eq 0 ]; then\n            break\n        fi\n        sleep 1\n    done\n    kubectl -n istio-system rollout status deployment istio-galley\n    if [ \"$?\" -ne 0 ]; then\n        echo \"istio-galley deployment rollout status check failed\"\n        exit 1\n    fi\n    echo \"istio-galley deployment ready for configuration validation\"\nfi\nsleep 5\nkubectl apply -f ${pathToResourceYAML}"},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app":"security","chart":"security","heritage":"Tiller","istio":"citadel","release":"istio"},"name":"istio-security-custom-resources","namespace":"istio-system"}}
  creationTimestamp: null
  labels:
    app: security
    chart: security
    heritage: Tiller
    istio: citadel
    release: istio
  name: istio-security-custom-resources
  selfLink: /api/v1/namespaces/istio-system/configmaps/istio-security-custom-resources
