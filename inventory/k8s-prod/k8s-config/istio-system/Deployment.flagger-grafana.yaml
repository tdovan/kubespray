apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: null
  generation: 1
  labels:
    app: flagger-grafana
    chart: grafana-1.2.0
    heritage: Tiller
    release: flagger-grafana
  name: flagger-grafana
  selfLink: /apis/extensions/v1beta1/namespaces/istio-system/deployments/flagger-grafana
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: flagger-grafana
      release: flagger-grafana
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "false"
      creationTimestamp: null
      labels:
        app: flagger-grafana
        release: flagger-grafana
    spec:
      containers:
      - env:
        - name: GF_PATHS_PROVISIONING
          value: /etc/grafana/provisioning/
        - name: GF_SECURITY_ADMIN_USER
          value: admin
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: change-me
        image: grafana/grafana:5.4.3
        imagePullPolicy: IfNotPresent
        name: grafana
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/grafana
          name: grafana
        - mountPath: /etc/grafana/dashboards
          name: dashboards
        - mountPath: /etc/grafana/provisioning/datasources
          name: datasources
        - mountPath: /etc/grafana/provisioning/dashboards
          name: providers
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: grafana
      - configMap:
          defaultMode: 420
          name: flagger-grafana-dashboards
        name: dashboards
      - configMap:
          defaultMode: 420
          name: flagger-grafana-providers
        name: providers
      - configMap:
          defaultMode: 420
          name: flagger-grafana-datasources
        name: datasources
status: {}
