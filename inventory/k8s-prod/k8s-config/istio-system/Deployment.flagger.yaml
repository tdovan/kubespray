apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: null
  generation: 1
  labels:
    app.kubernetes.io/instance: flagger
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: flagger
    helm.sh/chart: flagger-0.16.0
  name: flagger
  selfLink: /apis/extensions/v1beta1/namespaces/istio-system/deployments/flagger
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: flagger
      app.kubernetes.io/name: flagger
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: flagger
        app.kubernetes.io/name: flagger
    spec:
      containers:
      - command:
        - ./flagger
        - -log-level=info
        - -metrics-server=http://prometheus.istio-system:9090
        - -slack-url=https://hooks.slack.com/services/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
        - -slack-user=tdovan
        - -slack-channel=general
        image: weaveworks/flagger:0.16.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - wget
            - --quiet
            - --tries=1
            - --timeout=4
            - --spider
            - http://localhost:8080/healthz
          failureThreshold: 3
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: flagger
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - wget
            - --quiet
            - --tries=1
            - --timeout=4
            - --spider
            - http://localhost:8080/healthz
          failureThreshold: 3
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits:
            cpu: "1"
            memory: 512Mi
          requests:
            cpu: 10m
            memory: 32Mi
        securityContext:
          procMount: Default
          readOnlyRootFilesystem: true
          runAsUser: 10001
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: flagger
      serviceAccountName: flagger
      terminationGracePeriodSeconds: 30
status: {}
