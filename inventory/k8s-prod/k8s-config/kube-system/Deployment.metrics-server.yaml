apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"extensions/v1beta1","kind":"Deployment","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","app.kubernetes.io/name":"metrics-server","kubernetes.io/cluster-service":"true","version":"v0.3.3"},"name":"metrics-server","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"app.kubernetes.io/name":"metrics-server","version":"v0.3.3"}},"template":{"metadata":{"annotations":{"seccomp.security.alpha.kubernetes.io/pod":"docker/default"},"labels":{"app.kubernetes.io/name":"metrics-server","version":"v0.3.3"},"name":"metrics-server"},"spec":{"affinity":{"nodeAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"preference":{"matchExpressions":[{"key":"node-role.kubernetes.io/master","operator":"In","values":[""]}]},"weight":100}]}},"containers":[{"command":["/metrics-server","--logtostderr","--cert-dir=/tmp","--secure-port=8443","--kubelet-preferred-address-types=InternalIP","--kubelet-insecure-tls","--metric-resolution=60s"],"image":"gcr.io/google_containers/metrics-server-amd64:v0.3.3","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/healthz","port":"https","scheme":"HTTPS"},"initialDelaySeconds":20,"successThreshold":1,"timeoutSeconds":10},"name":"metrics-server","ports":[{"containerPort":8443,"name":"https","protocol":"TCP"}],"readinessProbe":{"failureThreshold":3,"httpGet":{"path":"/healthz","port":"https","scheme":"HTTPS"},"initialDelaySeconds":20,"successThreshold":1,"timeoutSeconds":10},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["all"]},"readOnlyRootFilesystem":true,"runAsGroup":10001,"runAsNonRoot":true,"runAsUser":10001},"volumeMounts":[{"mountPath":"/tmp","name":"tmp"}]},{"command":["/pod_nanny","--config-dir=/etc/config","--cpu=40m","--extra-cpu=0.5m","--memory=35Mi","--extra-memory=4Mi","--threshold=5","--deployment=metrics-server","--container=metrics-server","--poll-period=300000","--estimator=exponential","--minClusterSize=5"],"env":[{"name":"MY_POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"MY_POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}}],"image":"k8s.gcr.io/addon-resizer:1.8.3","name":"metrics-server-nanny","resources":{"limits":{"cpu":"100m","memory":"300Mi"},"requests":{"cpu":"5m","memory":"50Mi"}},"volumeMounts":[{"mountPath":"/etc/config","name":"metrics-server-config-volume"}]}],"priorityClassName":"system-cluster-critical","serviceAccountName":"metrics-server","volumes":[{"configMap":{"name":"metrics-server-config"},"name":"metrics-server-config-volume"},{"emptyDir":{},"name":"tmp"}]}}}}
  creationTimestamp: null
  generation: 1
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    app.kubernetes.io/name: metrics-server
    kubernetes.io/cluster-service: "true"
    version: v0.3.3
  name: metrics-server
  selfLink: /apis/extensions/v1beta1/namespaces/kube-system/deployments/metrics-server
spec:
  progressDeadlineSeconds: 2147483647
  replicas: 1
  revisionHistoryLimit: 2147483647
  selector:
    matchLabels:
      app.kubernetes.io/name: metrics-server
      version: v0.3.3
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: docker/default
      creationTimestamp: null
      labels:
        app.kubernetes.io/name: metrics-server
        version: v0.3.3
      name: metrics-server
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: In
                values:
                - ""
            weight: 100
      containers:
      - command:
        - /metrics-server
        - --logtostderr
        - --cert-dir=/tmp
        - --secure-port=8443
        - --kubelet-preferred-address-types=InternalIP
        - --kubelet-insecure-tls
        - --metric-resolution=60s
        image: gcr.io/google_containers/metrics-server-amd64:v0.3.3
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: https
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        name: metrics-server
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: https
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        resources:
          limits:
            cpu: 43m
            memory: 55Mi
          requests:
            cpu: 43m
            memory: 55Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          procMount: Default
          readOnlyRootFilesystem: true
          runAsGroup: 10001
          runAsNonRoot: true
          runAsUser: 10001
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - command:
        - /pod_nanny
        - --config-dir=/etc/config
        - --cpu=40m
        - --extra-cpu=0.5m
        - --memory=35Mi
        - --extra-memory=4Mi
        - --threshold=5
        - --deployment=metrics-server
        - --container=metrics-server
        - --poll-period=300000
        - --estimator=exponential
        - --minClusterSize=5
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: k8s.gcr.io/addon-resizer:1.8.3
        imagePullPolicy: IfNotPresent
        name: metrics-server-nanny
        resources:
          limits:
            cpu: 100m
            memory: 300Mi
          requests:
            cpu: 5m
            memory: 50Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/config
          name: metrics-server-config-volume
      dnsPolicy: ClusterFirst
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: metrics-server
      serviceAccountName: metrics-server
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: metrics-server-config
        name: metrics-server-config-volume
      - emptyDir: {}
        name: tmp
status: {}
