apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1beta2","kind":"Deployment","metadata":{"annotations":{},"labels":{"tier":"px-web-console"},"name":"px-lighthouse","namespace":"kube-system"},"spec":{"replicas":1,"selector":{"matchLabels":{"tier":"px-web-console"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"tier":"px-web-console"}},"spec":{"containers":[{"args":["-kubernetes","true"],"image":"portworx/px-lighthouse:2.0.4","imagePullPolicy":"Always","name":"px-lighthouse","ports":[{"containerPort":80},{"containerPort":443}],"volumeMounts":[{"mountPath":"/config/lh","name":"config"}]},{"args":["sync"],"image":"portworx/lh-config-sync:0.3","imagePullPolicy":"Always","name":"config-sync","volumeMounts":[{"mountPath":"/config/lh","name":"config"}]},{"image":"portworx/lh-stork-connector:0.1","imagePullPolicy":"Always","name":"stork-connector"}],"initContainers":[{"args":["init"],"image":"portworx/lh-config-sync:0.3","imagePullPolicy":"Always","name":"config-init","volumeMounts":[{"mountPath":"/config/lh","name":"config"}]}],"serviceAccountName":"px-lh-account","volumes":[{"emptyDir":{},"name":"config"}]}}}}
  creationTimestamp: null
  generation: 1
  labels:
    tier: px-web-console
  name: px-lighthouse
  selfLink: /apis/extensions/v1beta1/namespaces/kube-system/deployments/px-lighthouse
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      tier: px-web-console
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        tier: px-web-console
    spec:
      containers:
      - args:
        - -kubernetes
        - "true"
        image: portworx/px-lighthouse:2.0.4
        imagePullPolicy: Always
        name: px-lighthouse
        ports:
        - containerPort: 80
          protocol: TCP
        - containerPort: 443
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /config/lh
          name: config
      - args:
        - sync
        image: portworx/lh-config-sync:0.3
        imagePullPolicy: Always
        name: config-sync
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /config/lh
          name: config
      - image: portworx/lh-stork-connector:0.1
        imagePullPolicy: Always
        name: stork-connector
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      initContainers:
      - args:
        - init
        image: portworx/lh-config-sync:0.3
        imagePullPolicy: Always
        name: config-init
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /config/lh
          name: config
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: px-lh-account
      serviceAccountName: px-lh-account
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: config
status: {}
