apiVersion: v1
data:
  cluster-utilization.json: "{  \n    \"annotations\":{  \n        \"list\":[  \n
    \           {  \n                \"builtIn\":1,\n                \"datasource\":\"--
    Grafana --\",\n                \"enable\":true,\n                \"hide\":true,\n
    \               \"iconColor\":\"rgba(0, 211, 255, 1)\",\n                \"name\":\"Annotations
    & Alerts\",\n                \"type\":\"dashboard\"\n            }\n        ]\n
    \   },\n    \"description\":\"A dashboard to help manage Kubernetes cluster costs
    and resources\",\n    \"editable\":true,\n    \"gnetId\":6873,\n    \"graphTooltip\":0,\n
    \   \"id\":4,\n    \"iteration\":1556759633456,\n    \"links\":[  \n\n    ],\n
    \   \"panels\":[  \n        {  \n            \"content\":\"This dashboard shows
    monthly cost estimates for the cluster, based on **current** CPU, RAM and storage
    provisioned.\",\n            \"gridPos\":{  \n                \"h\":2,\n                \"w\":24,\n
    \               \"x\":0,\n                \"y\":0\n            },\n            \"id\":86,\n
    \           \"links\":[  \n\n            ],\n            \"mode\":\"markdown\",\n
    \           \"title\":\"\",\n            \"transparent\":true,\n            \"type\":\"text\"\n
    \       },\n        {  \n            \"cacheTimeout\":null,\n            \"colorBackground\":false,\n
    \           \"colorValue\":false,\n            \"colors\":[  \n                \"#299c46\",\n
    \               \"rgba(237, 129, 40, 0.89)\",\n                \"#d44a3a\"\n            ],\n
    \           \"datasource\":\"Prometheus\",\n            \"decimals\":2,\n            \"format\":\"currencyUSD\",\n
    \           \"gauge\":{  \n                \"maxValue\":100,\n                \"minValue\":0,\n
    \               \"show\":false,\n                \"thresholdLabels\":false,\n
    \               \"thresholdMarkers\":true\n            },\n            \"gridPos\":{
    \ \n                \"h\":4,\n                \"w\":6,\n                \"x\":0,\n
    \               \"y\":2\n            },\n            \"hideTimeOverride\":true,\n
    \           \"id\":75,\n            \"interval\":null,\n            \"links\":[
    \ \n\n            ],\n            \"mappingType\":1,\n            \"mappingTypes\":[
    \ \n                {  \n                    \"name\":\"value to text\",\n                    \"value\":1\n
    \               },\n                {  \n                    \"name\":\"range
    to text\",\n                    \"value\":2\n                }\n            ],\n
    \           \"maxDataPoints\":100,\n            \"nullPointMode\":\"connected\",\n
    \           \"nullText\":null,\n            \"postfix\":\"\",\n            \"postfixFontSize\":\"50%\",\n
    \           \"prefix\":\"\",\n            \"prefixFontSize\":\"50%\",\n            \"rangeMaps\":[
    \ \n                {  \n                    \"from\":\"null\",\n                    \"text\":\"N/A\",\n
    \                   \"to\":\"null\"\n                }\n            ],\n            \"sparkline\":{
    \ \n                \"fillColor\":\"rgba(31, 118, 189, 0.18)\",\n                \"full\":false,\n
    \               \"lineColor\":\"rgb(31, 120, 193)\",\n                \"show\":false\n
    \           },\n            \"tableColumn\":\"label_cloud_google_com_gke_preemptible\",\n
    \           \"targets\":[  \n                {  \n                    \"expr\":\"sum(\\n
    (\\n (\\n sum(kube_node_status_capacity_cpu_cores) by (node)\\n * on (node) group_left
    (label_cloud_google_com_gke_preemptible)\\n avg(kube_node_labels{label_cloud_google_com_gke_preemptible=\\\"true\\\"})
    by (node)\\n ) * $costpcpu\\n )\\n or\\n (\\n (\\n sum(kube_node_status_capacity_cpu_cores)
    by (node)\\n * on (node) group_left (label_cloud_google_com_gke_preemptible)\\n
    avg(kube_node_labels{label_cloud_google_com_gke_preemptible!=\\\"true\\\"}) by
    (node)\\n ) * ($costcpu - ($costcpu / 100 * $costDiscount))\\n )\\n) \",\n                    \"format\":\"time_series\",\n
    \                   \"instant\":true,\n                    \"interval\":\"\",\n
    \                   \"intervalFactor\":1,\n                    \"legendFormat\":\"
    {{ node }}\",\n                    \"refId\":\"A\"\n                }\n            ],\n
    \           \"thresholds\":\"\",\n            \"timeFrom\":\"15m\",\n            \"timeShift\":null,\n
    \           \"title\":\"CPU Cost\",\n            \"type\":\"singlestat\",\n            \"valueFontSize\":\"80%\",\n
    \           \"valueMaps\":[  \n                {  \n                    \"op\":\"=\",\n
    \                   \"text\":\"N/A\",\n                    \"value\":\"null\"\n
    \               }\n            ],\n            \"valueName\":\"current\"\n        },\n
    \       {  \n            \"cacheTimeout\":null,\n            \"colorBackground\":false,\n
    \           \"colorValue\":false,\n            \"colors\":[  \n                \"#299c46\",\n
    \               \"rgba(237, 129, 40, 0.89)\",\n                \"#d44a3a\"\n            ],\n
    \           \"datasource\":\"Prometheus\",\n            \"decimals\":2,\n            \"format\":\"currencyUSD\",\n
    \           \"gauge\":{  \n                \"maxValue\":100,\n                \"minValue\":0,\n
    \               \"show\":false,\n                \"thresholdLabels\":false,\n
    \               \"thresholdMarkers\":true\n            },\n            \"gridPos\":{
    \ \n                \"h\":4,\n                \"w\":6,\n                \"x\":6,\n
    \               \"y\":2\n            },\n            \"hideTimeOverride\":true,\n
    \           \"id\":77,\n            \"interval\":null,\n            \"links\":[
    \ \n\n            ],\n            \"mappingType\":1,\n            \"mappingTypes\":[
    \ \n                {  \n                    \"name\":\"value to text\",\n                    \"value\":1\n
    \               },\n                {  \n                    \"name\":\"range
    to text\",\n                    \"value\":2\n                }\n            ],\n
    \           \"maxDataPoints\":100,\n            \"nullPointMode\":\"connected\",\n
    \           \"nullText\":null,\n            \"postfix\":\"\",\n            \"postfixFontSize\":\"50%\",\n
    \           \"prefix\":\"\",\n            \"prefixFontSize\":\"50%\",\n            \"rangeMaps\":[
    \ \n                {  \n                    \"from\":\"null\",\n                    \"text\":\"N/A\",\n
    \                   \"to\":\"null\"\n                }\n            ],\n            \"sparkline\":{
    \ \n                \"fillColor\":\"rgba(31, 118, 189, 0.18)\",\n                \"full\":false,\n
    \               \"lineColor\":\"rgb(31, 120, 193)\",\n                \"show\":false\n
    \           },\n            \"tableColumn\":\"label_cloud_google_com_gke_preemptible\",\n
    \           \"targets\":[  \n                {  \n                    \"expr\":\"sum(\\n
    (\\n (\\n sum(kube_node_status_capacity_memory_bytes) by (node)\\n * on (node)
    group_left (label_cloud_google_com_gke_preemptible)\\n avg(kube_node_labels{label_cloud_google_com_gke_preemptible=\\\"true\\\"})
    by (node)\\n ) /1024/1024/1024 * $costpram\\n )\\n or\\n (\\n (\\n sum(kube_node_status_capacity_memory_bytes)
    by (node)\\n * on (node) group_left (label_cloud_google_com_gke_preemptible)\\n
    avg(kube_node_labels{label_cloud_google_com_gke_preemptible!=\\\"true\\\"}) by
    (node)\\n ) /1024/1024/1024 * ($costram - ($costram / 100 * $costDiscount))\\n)\\n)
    \",\n                    \"format\":\"time_series\",\n                    \"instant\":true,\n
    \                   \"interval\":\"\",\n                    \"intervalFactor\":1,\n
    \                   \"legendFormat\":\" {{ node }}\",\n                    \"refId\":\"A\"\n
    \               }\n            ],\n            \"thresholds\":\"\",\n            \"timeFrom\":\"15m\",\n
    \           \"timeShift\":null,\n            \"title\":\"RAM Cost\",\n            \"type\":\"singlestat\",\n
    \           \"valueFontSize\":\"80%\",\n            \"valueMaps\":[  \n                {
    \ \n                    \"op\":\"=\",\n                    \"text\":\"N/A\",\n
    \                   \"value\":\"null\"\n                }\n            ],\n            \"valueName\":\"current\"\n
    \       },\n        {  \n            \"cacheTimeout\":null,\n            \"colorBackground\":false,\n
    \           \"colorValue\":false,\n            \"colors\":[  \n                \"#299c46\",\n
    \               \"rgba(237, 129, 40, 0.89)\",\n                \"#d44a3a\"\n            ],\n
    \           \"datasource\":\"Prometheus\",\n            \"decimals\":2,\n            \"format\":\"currencyUSD\",\n
    \           \"gauge\":{  \n                \"maxValue\":100,\n                \"minValue\":0,\n
    \               \"show\":false,\n                \"thresholdLabels\":false,\n
    \               \"thresholdMarkers\":true\n            },\n            \"gridPos\":{
    \ \n                \"h\":4,\n                \"w\":6,\n                \"x\":12,\n
    \               \"y\":2\n            },\n            \"hideTimeOverride\":true,\n
    \           \"id\":78,\n            \"interval\":null,\n            \"links\":[
    \ \n\n            ],\n            \"mappingType\":1,\n            \"mappingTypes\":[
    \ \n                {  \n                    \"name\":\"value to text\",\n                    \"value\":1\n
    \               },\n                {  \n                    \"name\":\"range
    to text\",\n                    \"value\":2\n                }\n            ],\n
    \           \"maxDataPoints\":100,\n            \"nullPointMode\":\"connected\",\n
    \           \"nullText\":null,\n            \"postfix\":\"\",\n            \"postfixFontSize\":\"50%\",\n
    \           \"prefix\":\"\",\n            \"prefixFontSize\":\"50%\",\n            \"rangeMaps\":[
    \ \n                {  \n                    \"from\":\"null\",\n                    \"text\":\"N/A\",\n
    \                   \"to\":\"null\"\n                }\n            ],\n            \"sparkline\":{
    \ \n                \"fillColor\":\"rgba(31, 118, 189, 0.18)\",\n                \"full\":false,\n
    \               \"lineColor\":\"rgb(31, 120, 193)\",\n                \"show\":false\n
    \           },\n            \"tableColumn\":\"label_cloud_google_com_gke_preemptible\",\n
    \           \"targets\":[  \n                {  \n                    \"expr\":\"sum
    (\\n sum(kube_persistentvolumeclaim_info{storageclass=~\\\".*ssd.*\\\"}) by (persistentvolumeclaim,
    namespace, storageclass)\\n + on (persistentvolumeclaim, namespace) group_right(storageclass)\\n
    sum(kube_persistentvolumeclaim_resource_requests_storage_bytes) by (persistentvolumeclaim,
    namespace) or up * 0\\n) / 1024 / 1024 /1024 * $costStorageSSD\\n\\n+\\n\\nsum
    (\\n sum(kube_persistentvolumeclaim_info{storageclass!~\\\".*ssd.*\\\"}) by (persistentvolumeclaim,
    namespace, storageclass)\\n + on (persistentvolumeclaim, namespace) group_right(storageclass)\\n
    sum(kube_persistentvolumeclaim_resource_requests_storage_bytes) by (persistentvolumeclaim,
    namespace) or up * 0\\n) / 1024 / 1024 /1024 * $costStorageStandard\\n\\n+ \\n\\nsum(container_fs_limit_bytes{id=\\\"/\\\"})
    / 1024 / 1024 / 1024 * 1.03 * $costStorageStandard\",\n                    \"format\":\"time_series\",\n
    \                   \"instant\":true,\n                    \"interval\":\"\",\n
    \                   \"intervalFactor\":1,\n                    \"legendFormat\":\"
    {{ node }}\",\n                    \"refId\":\"A\"\n                }\n            ],\n
    \           \"thresholds\":\"\",\n            \"timeFrom\":\"15m\",\n            \"timeShift\":null,\n
    \           \"title\":\"Storage Cost (Cluster and PVC)\",\n            \"type\":\"singlestat\",\n
    \           \"valueFontSize\":\"80%\",\n            \"valueMaps\":[  \n                {
    \ \n                    \"op\":\"=\",\n                    \"text\":\"N/A\",\n
    \                   \"value\":\"null\"\n                }\n            ],\n            \"valueName\":\"current\"\n
    \       },\n        {  \n            \"cacheTimeout\":null,\n            \"colorBackground\":false,\n
    \           \"colorValue\":false,\n            \"colors\":[  \n                \"#299c46\",\n
    \               \"rgba(237, 129, 40, 0.89)\",\n                \"#d44a3a\"\n            ],\n
    \           \"datasource\":\"Prometheus\",\n            \"decimals\":2,\n            \"description\":\"Represents
    a near worst-case approximation of network costs.\",\n            \"format\":\"currencyUSD\",\n
    \           \"gauge\":{  \n                \"maxValue\":100,\n                \"minValue\":0,\n
    \               \"show\":false,\n                \"thresholdLabels\":false,\n
    \               \"thresholdMarkers\":true\n            },\n            \"gridPos\":{
    \ \n                \"h\":4,\n                \"w\":6,\n                \"x\":18,\n
    \               \"y\":2\n            },\n            \"hideTimeOverride\":true,\n
    \           \"id\":129,\n            \"interval\":null,\n            \"links\":[
    \ \n\n            ],\n            \"mappingType\":1,\n            \"mappingTypes\":[
    \ \n                {  \n                    \"name\":\"value to text\",\n                    \"value\":1\n
    \               },\n                {  \n                    \"name\":\"range
    to text\",\n                    \"value\":2\n                }\n            ],\n
    \           \"maxDataPoints\":100,\n            \"nullPointMode\":\"connected\",\n
    \           \"nullText\":null,\n            \"postfix\":\"\",\n            \"postfixFontSize\":\"50%\",\n
    \           \"prefix\":\"\",\n            \"prefixFontSize\":\"50%\",\n            \"rangeMaps\":[
    \ \n                {  \n                    \"from\":\"null\",\n                    \"text\":\"N/A\",\n
    \                   \"to\":\"null\"\n                }\n            ],\n            \"sparkline\":{
    \ \n                \"fillColor\":\"rgba(31, 118, 189, 0.18)\",\n                \"full\":false,\n
    \               \"lineColor\":\"rgb(31, 120, 193)\",\n                \"show\":false\n
    \           },\n            \"tableColumn\":\"label_cloud_google_com_gke_preemptible\",\n
    \           \"targets\":[  \n                {  \n                    \"expr\":\"SUM(rate(node_network_transmit_bytes_total{device=\\\"eth0\\\"}[60m])
    / 1024 / 1024 / 1024 ) * (60 * 60 * 24 * 30) * $costEgress\",\n                    \"format\":\"time_series\",\n
    \                   \"instant\":true,\n                    \"interval\":\"\",\n
    \                   \"intervalFactor\":1,\n                    \"legendFormat\":\"
    {{ node }}\",\n                    \"refId\":\"A\"\n                }\n            ],\n
    \           \"thresholds\":\"\",\n            \"timeFrom\":\"15m\",\n            \"timeShift\":null,\n
    \           \"title\":\"Network Egress Cost\",\n            \"type\":\"singlestat\",\n
    \           \"valueFontSize\":\"80%\",\n            \"valueMaps\":[  \n                {
    \ \n                    \"op\":\"=\",\n                    \"text\":\"N/A\",\n
    \                   \"value\":\"null\"\n                }\n            ],\n            \"valueName\":\"current\"\n
    \       },\n        {  \n            \"cacheTimeout\":null,\n            \"colorBackground\":false,\n
    \           \"colorValue\":true,\n            \"colors\":[  \n                \"rgba(245,
    54, 54, 0.9)\",\n                \"rgba(50, 172, 45, 0.97)\",\n                \"#c15c17\"\n
    \           ],\n            \"datasource\":\"Prometheus\",\n            \"decimals\":2,\n
    \           \"description\":\"Current CPU use from applications divided by allocatable
    CPUs\",\n            \"editable\":true,\n            \"error\":false,\n            \"format\":\"percent\",\n
    \           \"gauge\":{  \n                \"maxValue\":100,\n                \"minValue\":0,\n
    \               \"show\":true,\n                \"thresholdLabels\":false,\n                \"thresholdMarkers\":true\n
    \           },\n            \"gridPos\":{  \n                \"h\":4,\n                \"w\":3,\n
    \               \"x\":0,\n                \"y\":6\n            },\n            \"height\":\"180px\",\n
    \           \"hideTimeOverride\":true,\n            \"id\":82,\n            \"interval\":null,\n
    \           \"isNew\":true,\n            \"links\":[  \n\n            ],\n            \"mappingType\":1,\n
    \           \"mappingTypes\":[  \n                {  \n                    \"name\":\"value
    to text\",\n                    \"value\":1\n                },\n                {
    \ \n                    \"name\":\"range to text\",\n                    \"value\":2\n
    \               }\n            ],\n            \"maxDataPoints\":100,\n            \"nullPointMode\":\"connected\",\n
    \           \"nullText\":null,\n            \"postfix\":\"\",\n            \"postfixFontSize\":\"50%\",\n
    \           \"prefix\":\"\",\n            \"prefixFontSize\":\"50%\",\n            \"rangeMaps\":[
    \ \n                {  \n                    \"from\":\"null\",\n                    \"text\":\"N/A\",\n
    \                   \"to\":\"null\"\n                }\n            ],\n            \"sparkline\":{
    \ \n                \"fillColor\":\"rgba(31, 118, 189, 0.18)\",\n                \"full\":false,\n
    \               \"lineColor\":\"rgb(31, 120, 193)\",\n                \"show\":false\n
    \           },\n            \"tableColumn\":\"\",\n            \"targets\":[  \n
    \               {  \n                    \"expr\":\"(\\n sum(\\n count(irate(container_cpu_usage_seconds_total{id=\\\"/\\\"}[10m]))
    by (instance)\\n * on (instance) \\n sum(irate(container_cpu_usage_seconds_total{id=\\\"/\\\"}[10m]))
    by (instance)\\n ) \\n / \\n (sum (kube_node_status_allocatable_cpu_cores))\\n)
    * 100\",\n                    \"format\":\"time_series\",\n                    \"interval\":\"\",\n
    \                   \"intervalFactor\":1,\n                    \"refId\":\"A\",\n
    \                   \"step\":10\n                }\n            ],\n            \"thresholds\":\"30,
    80\",\n            \"timeFrom\":\"\",\n            \"title\":\"CPU Utilization\",\n
    \           \"type\":\"singlestat\",\n            \"valueFontSize\":\"80%\",\n
    \           \"valueMaps\":[  \n                {  \n                    \"op\":\"=\",\n
    \                   \"text\":\"N/A\",\n                    \"value\":\"null\"\n
    \               }\n            ],\n            \"valueName\":\"current\"\n        },\n
    \       {  \n            \"cacheTimeout\":null,\n            \"colorBackground\":false,\n
    \           \"colorValue\":true,\n            \"colors\":[  \n                \"rgba(245,
    54, 54, 0.9)\",\n                \"rgba(50, 172, 45, 0.97)\",\n                \"#c15c17\"\n
    \           ],\n            \"datasource\":\"Prometheus\",\n            \"decimals\":2,\n
    \           \"description\":\"Current CPU reservation requests from applications
    vs allocatable CPU\",\n            \"editable\":true,\n            \"error\":false,\n
    \           \"format\":\"percent\",\n            \"gauge\":{  \n                \"maxValue\":100,\n
    \               \"minValue\":0,\n                \"show\":true,\n                \"thresholdLabels\":false,\n
    \               \"thresholdMarkers\":true\n            },\n            \"gridPos\":{
    \ \n                \"h\":4,\n                \"w\":3,\n                \"x\":3,\n
    \               \"y\":6\n            },\n            \"height\":\"180px\",\n            \"id\":91,\n
    \           \"interval\":null,\n            \"isNew\":true,\n            \"links\":[
    \ \n\n            ],\n            \"mappingType\":1,\n            \"mappingTypes\":[
    \ \n                {  \n                    \"name\":\"value to text\",\n                    \"value\":1\n
    \               },\n                {  \n                    \"name\":\"range
    to text\",\n                    \"value\":2\n                }\n            ],\n
    \           \"maxDataPoints\":100,\n            \"nullPointMode\":\"connected\",\n
    \           \"nullText\":null,\n            \"postfix\":\"\",\n            \"postfixFontSize\":\"50%\",\n
    \           \"prefix\":\"\",\n            \"prefixFontSize\":\"50%\",\n            \"rangeMaps\":[
    \ \n                {  \n                    \"from\":\"null\",\n                    \"text\":\"N/A\",\n
    \                   \"to\":\"null\"\n                }\n            ],\n            \"sparkline\":{
    \ \n                \"fillColor\":\"rgba(31, 118, 189, 0.18)\",\n                \"full\":false,\n
    \               \"lineColor\":\"rgb(31, 120, 193)\",\n                \"show\":false\n
    \           },\n            \"tableColumn\":\"\",\n            \"targets\":[  \n
    \               {  \n                    \"expr\":\"SUM(kube_pod_container_resource_requests_cpu_cores)
    / SUM(kube_node_status_allocatable_cpu_cores) * 100\",\n                    \"format\":\"time_series\",\n
    \                   \"interval\":\"\",\n                    \"intervalFactor\":1,\n
    \                   \"refId\":\"A\",\n                    \"step\":10\n                }\n
    \           ],\n            \"thresholds\":\"30, 80\",\n            \"title\":\"CPU
    Requests\",\n            \"type\":\"singlestat\",\n            \"valueFontSize\":\"80%\",\n
    \           \"valueMaps\":[  \n                {  \n                    \"op\":\"=\",\n
    \                   \"text\":\"N/A\",\n                    \"value\":\"null\"\n
    \               }\n            ],\n            \"valueName\":\"current\"\n        },\n
    \       {  \n            \"cacheTimeout\":null,\n            \"colorBackground\":false,\n
    \           \"colorValue\":true,\n            \"colors\":[  \n                \"rgba(245,
    54, 54, 0.9)\",\n                \"rgba(50, 172, 45, 0.97)\",\n                \"#c15c17\"\n
    \           ],\n            \"datasource\":\"Prometheus\",\n            \"description\":\"Current
    RAM use vs RAM available\",\n            \"editable\":true,\n            \"error\":false,\n
    \           \"format\":\"percent\",\n            \"gauge\":{  \n                \"maxValue\":100,\n
    \               \"minValue\":0,\n                \"show\":true,\n                \"thresholdLabels\":false,\n
    \               \"thresholdMarkers\":true\n            },\n            \"gridPos\":{
    \ \n                \"h\":4,\n                \"w\":3,\n                \"x\":6,\n
    \               \"y\":6\n            },\n            \"height\":\"180px\",\n            \"hideTimeOverride\":true,\n
    \           \"id\":80,\n            \"interval\":null,\n            \"isNew\":true,\n
    \           \"links\":[  \n\n            ],\n            \"mappingType\":1,\n
    \           \"mappingTypes\":[  \n                {  \n                    \"name\":\"value
    to text\",\n                    \"value\":1\n                },\n                {
    \ \n                    \"name\":\"range to text\",\n                    \"value\":2\n
    \               }\n            ],\n            \"maxDataPoints\":100,\n            \"nullPointMode\":\"connected\",\n
    \           \"nullText\":null,\n            \"postfix\":\"\",\n            \"postfixFontSize\":\"50%\",\n
    \           \"prefix\":\"\",\n            \"prefixFontSize\":\"50%\",\n            \"rangeMaps\":[
    \ \n                {  \n                    \"from\":\"null\",\n                    \"text\":\"N/A\",\n
    \                   \"to\":\"null\"\n                }\n            ],\n            \"sparkline\":{
    \ \n                \"fillColor\":\"rgba(31, 118, 189, 0.18)\",\n                \"full\":false,\n
    \               \"lineColor\":\"rgb(31, 120, 193)\",\n                \"show\":false\n
    \           },\n            \"tableColumn\":\"\",\n            \"targets\":[  \n
    \               {  \n                    \"expr\":\"SUM(container_memory_usage_bytes{namespace!=\\\"\\\"})
    / SUM(kube_node_status_allocatable_memory_bytes) * 100\",\n                    \"format\":\"time_series\",\n
    \                   \"interval\":\"\",\n                    \"intervalFactor\":1,\n
    \                   \"refId\":\"A\",\n                    \"step\":10\n                },\n
    \               {  \n                    \"expr\":\"\",\n                    \"format\":\"time_series\",\n
    \                   \"intervalFactor\":1,\n                    \"refId\":\"B\"\n
    \               }\n            ],\n            \"thresholds\":\"30,80\",\n            \"timeFrom\":\"\",\n
    \           \"title\":\"RAM Utilization\",\n            \"transparent\":false,\n
    \           \"type\":\"singlestat\",\n            \"valueFontSize\":\"80%\",\n
    \           \"valueMaps\":[  \n                {  \n                    \"op\":\"=\",\n
    \                   \"text\":\"N/A\",\n                    \"value\":\"null\"\n
    \               }\n            ],\n            \"valueName\":\"current\"\n        },\n
    \       {  \n            \"cacheTimeout\":null,\n            \"colorBackground\":false,\n
    \           \"colorValue\":true,\n            \"colors\":[  \n                \"rgba(245,
    54, 54, 0.9)\",\n                \"rgba(50, 172, 45, 0.97)\",\n                \"#c15c17\"\n
    \           ],\n            \"datasource\":\"Prometheus\",\n            \"description\":\"Current
    RAM requests vs RAM available\",\n            \"editable\":true,\n            \"error\":false,\n
    \           \"format\":\"percent\",\n            \"gauge\":{  \n                \"maxValue\":100,\n
    \               \"minValue\":0,\n                \"show\":true,\n                \"thresholdLabels\":false,\n
    \               \"thresholdMarkers\":true\n            },\n            \"gridPos\":{
    \ \n                \"h\":4,\n                \"w\":3,\n                \"x\":9,\n
    \               \"y\":6\n            },\n            \"height\":\"180px\",\n            \"id\":92,\n
    \           \"interval\":null,\n            \"isNew\":true,\n            \"links\":[
    \ \n\n            ],\n            \"mappingType\":1,\n            \"mappingTypes\":[
    \ \n                {  \n                    \"name\":\"value to text\",\n                    \"value\":1\n
    \               },\n                {  \n                    \"name\":\"range
    to text\",\n                    \"value\":2\n                }\n            ],\n
    \           \"maxDataPoints\":100,\n            \"nullPointMode\":\"connected\",\n
    \           \"nullText\":null,\n            \"postfix\":\"\",\n            \"postfixFontSize\":\"50%\",\n
    \           \"prefix\":\"\",\n            \"prefixFontSize\":\"50%\",\n            \"rangeMaps\":[
    \ \n                {  \n                    \"from\":\"null\",\n                    \"text\":\"N/A\",\n
    \                   \"to\":\"null\"\n                }\n            ],\n            \"sparkline\":{
    \ \n                \"fillColor\":\"rgba(31, 118, 189, 0.18)\",\n                \"full\":false,\n
    \               \"lineColor\":\"rgb(31, 120, 193)\",\n                \"show\":false\n
    \           },\n            \"tableColumn\":\"\",\n            \"targets\":[  \n
    \               {  \n                    \"expr\":\"(\\n sum(kube_pod_container_resource_requests_memory_bytes{namespace!=\\\"\\\"})\\n
    /\\n sum(kube_node_status_allocatable_memory_bytes)\\n) * 100\",\n                    \"format\":\"time_series\",\n
    \                   \"interval\":\"\",\n                    \"intervalFactor\":1,\n
    \                   \"refId\":\"A\",\n                    \"step\":10\n                }\n
    \           ],\n            \"thresholds\":\"30,80\",\n            \"title\":\"RAM
    Requests\",\n            \"transparent\":false,\n            \"type\":\"singlestat\",\n
    \           \"valueFontSize\":\"80%\",\n            \"valueMaps\":[  \n                {
    \ \n                    \"op\":\"=\",\n                    \"text\":\"N/A\",\n
    \                   \"value\":\"null\"\n                }\n            ],\n            \"valueName\":\"current\"\n
    \       },\n        {  \n            \"cacheTimeout\":null,\n            \"colorBackground\":false,\n
    \           \"colorValue\":true,\n            \"colors\":[  \n                \"rgba(245,
    54, 54, 0.9)\",\n                \"rgba(50, 172, 45, 0.97)\",\n                \"#c15c17\"\n
    \           ],\n            \"datasource\":\"Prometheus\",\n            \"decimals\":2,\n
    \           \"description\":\"This gauge shows the current standard storage use,
    including cluster storage, vs storage available\",\n            \"editable\":true,\n
    \           \"error\":false,\n            \"format\":\"percent\",\n            \"gauge\":{
    \ \n                \"maxValue\":100,\n                \"minValue\":0,\n                \"show\":true,\n
    \               \"thresholdLabels\":false,\n                \"thresholdMarkers\":true\n
    \           },\n            \"gridPos\":{  \n                \"h\":4,\n                \"w\":3,\n
    \               \"x\":12,\n                \"y\":6\n            },\n            \"height\":\"180px\",\n
    \           \"hideTimeOverride\":true,\n            \"id\":95,\n            \"interval\":null,\n
    \           \"isNew\":true,\n            \"links\":[  \n\n            ],\n            \"mappingType\":1,\n
    \           \"mappingTypes\":[  \n                {  \n                    \"name\":\"value
    to text\",\n                    \"value\":1\n                },\n                {
    \ \n                    \"name\":\"range to text\",\n                    \"value\":2\n
    \               }\n            ],\n            \"maxDataPoints\":100,\n            \"nullPointMode\":\"connected\",\n
    \           \"nullText\":null,\n            \"postfix\":\"\",\n            \"postfixFontSize\":\"50%\",\n
    \           \"prefix\":\"\",\n            \"prefixFontSize\":\"50%\",\n            \"rangeMaps\":[
    \ \n                {  \n                    \"from\":\"null\",\n                    \"text\":\"N/A\",\n
    \                   \"to\":\"null\"\n                }\n            ],\n            \"sparkline\":{
    \ \n                \"fillColor\":\"rgba(31, 118, 189, 0.18)\",\n                \"full\":false,\n
    \               \"lineColor\":\"rgb(31, 120, 193)\",\n                \"show\":false\n
    \           },\n            \"tableColumn\":\"\",\n            \"targets\":[  \n
    \               {  \n                    \"expr\":\"sum (\\n sum(kube_persistentvolumeclaim_info{storageclass!~\\\".*ssd.*\\\"})
    by (persistentvolumeclaim, namespace, storageclass)\\n + on (persistentvolumeclaim,
    namespace) group_right(storageclass)\\n sum(kubelet_volume_stats_used_bytes) by
    (persistentvolumeclaim, namespace) or up * 0\\n + sum(container_fs_usage_bytes{device=~\\\"^/dev/[sv]d[a-z][1-9]$\\\",id=\\\"/\\\"})\\n)
    /\\nsum (\\n sum(kube_persistentvolumeclaim_info{storageclass!~\\\".*ssd.*\\\"})
    by (persistentvolumeclaim, namespace, storageclass)\\n + on (persistentvolumeclaim,
    namespace) group_right(storageclass)\\n sum(kube_persistentvolumeclaim_resource_requests_storage_bytes)
    by (persistentvolumeclaim, namespace) or up * 0\\n + sum(container_fs_limit_bytes{device=~\\\"^/dev/[sv]d[a-z][1-9]$\\\",id=\\\"/\\\"})\\n)
    * 100\",\n                    \"format\":\"time_series\",\n                    \"interval\":\"\",\n
    \                   \"intervalFactor\":1,\n                    \"refId\":\"A\",\n
    \                   \"step\":10\n                }\n            ],\n            \"thresholds\":\"30,
    80\",\n            \"timeFrom\":\"\",\n            \"title\":\"Storage Utilization\",\n
    \           \"type\":\"singlestat\",\n            \"valueFontSize\":\"80%\",\n
    \           \"valueMaps\":[  \n                {  \n                    \"op\":\"=\",\n
    \                   \"text\":\"N/A\",\n                    \"value\":\"null\"\n
    \               }\n            ],\n            \"valueName\":\"current\"\n        },\n
    \       {  \n            \"cacheTimeout\":null,\n            \"colorBackground\":false,\n
    \           \"colorValue\":true,\n            \"colors\":[  \n                \"rgba(245,
    54, 54, 0.9)\",\n                \"rgba(50, 172, 45, 0.97)\",\n                \"#c15c17\"\n
    \           ],\n            \"datasource\":\"Prometheus\",\n            \"decimals\":2,\n
    \           \"description\":\"This gauge shows the current SSD use vs SSD available\",\n
    \           \"editable\":true,\n            \"error\":false,\n            \"format\":\"percent\",\n
    \           \"gauge\":{  \n                \"maxValue\":100,\n                \"minValue\":0,\n
    \               \"show\":true,\n                \"thresholdLabels\":false,\n                \"thresholdMarkers\":true\n
    \           },\n            \"gridPos\":{  \n                \"h\":4,\n                \"w\":3,\n
    \               \"x\":15,\n                \"y\":6\n            },\n            \"height\":\"180px\",\n
    \           \"hideTimeOverride\":true,\n            \"id\":96,\n            \"interval\":null,\n
    \           \"isNew\":true,\n            \"links\":[  \n\n            ],\n            \"mappingType\":1,\n
    \           \"mappingTypes\":[  \n                {  \n                    \"name\":\"value
    to text\",\n                    \"value\":1\n                },\n                {
    \ \n                    \"name\":\"range to text\",\n                    \"value\":2\n
    \               }\n            ],\n            \"maxDataPoints\":100,\n            \"nullPointMode\":\"connected\",\n
    \           \"nullText\":null,\n            \"postfix\":\"\",\n            \"postfixFontSize\":\"50%\",\n
    \           \"prefix\":\"\",\n            \"prefixFontSize\":\"50%\",\n            \"rangeMaps\":[
    \ \n                {  \n                    \"from\":\"null\",\n                    \"text\":\"N/A\",\n
    \                   \"to\":\"null\"\n                }\n            ],\n            \"sparkline\":{
    \ \n                \"fillColor\":\"rgba(31, 118, 189, 0.18)\",\n                \"full\":false,\n
    \               \"lineColor\":\"rgb(31, 120, 193)\",\n                \"show\":false\n
    \           },\n            \"tableColumn\":\"\",\n            \"targets\":[  \n
    \               {  \n                    \"expr\":\"sum (\\n sum(kube_persistentvolumeclaim_info{storageclass=~\\\".*ssd.*\\\"})
    by (persistentvolumeclaim, namespace, storageclass)\\n + on (persistentvolumeclaim,
    namespace) group_right(storageclass)\\n sum(kubelet_volume_stats_used_bytes) by
    (persistentvolumeclaim, namespace)\\n) /\\nsum (\\n sum(kube_persistentvolumeclaim_info{storageclass=~\\\".*ssd.*\\\"})
    by (persistentvolumeclaim, namespace, storageclass)\\n + on (persistentvolumeclaim,
    namespace) group_right(storageclass)\\n sum(kube_persistentvolumeclaim_resource_requests_storage_bytes)
    by (persistentvolumeclaim, namespace)\\n) * 100\",\n                    \"format\":\"time_series\",\n
    \                   \"interval\":\"\",\n                    \"intervalFactor\":1,\n
    \                   \"refId\":\"A\",\n                    \"step\":10\n                }\n
    \           ],\n            \"thresholds\":\"30, 80\",\n            \"timeFrom\":\"\",\n
    \           \"title\":\"SSD Utilization\",\n            \"type\":\"singlestat\",\n
    \           \"valueFontSize\":\"80%\",\n            \"valueMaps\":[  \n                {
    \ \n                    \"op\":\"=\",\n                    \"text\":\"N/A\",\n
    \                   \"value\":\"null\"\n                }\n            ],\n            \"valueName\":\"current\"\n
    \       },\n        {  \n            \"cacheTimeout\":null,\n            \"colorBackground\":false,\n
    \           \"colorValue\":false,\n            \"colors\":[  \n                \"#299c46\",\n
    \               \"rgba(237, 129, 40, 0.89)\",\n                \"#d44a3a\"\n            ],\n
    \           \"datasource\":\"Prometheus\",\n            \"decimals\":2,\n            \"description\":\"Expected
    monthly cost given current CPU, memory storage, and network resource consumption\",\n
    \           \"format\":\"currencyUSD\",\n            \"gauge\":{  \n                \"maxValue\":100,\n
    \               \"minValue\":0,\n                \"show\":false,\n                \"thresholdLabels\":false,\n
    \               \"thresholdMarkers\":true\n            },\n            \"gridPos\":{
    \ \n                \"h\":4,\n                \"w\":6,\n                \"x\":18,\n
    \               \"y\":6\n            },\n            \"hideTimeOverride\":true,\n
    \           \"id\":93,\n            \"interval\":null,\n            \"links\":[
    \ \n\n            ],\n            \"mappingType\":1,\n            \"mappingTypes\":[
    \ \n                {  \n                    \"name\":\"value to text\",\n                    \"value\":1\n
    \               },\n                {  \n                    \"name\":\"range
    to text\",\n                    \"value\":2\n                }\n            ],\n
    \           \"maxDataPoints\":100,\n            \"nullPointMode\":\"connected\",\n
    \           \"nullText\":null,\n            \"postfix\":\"\",\n            \"postfixFontSize\":\"50%\",\n
    \           \"prefix\":\"\",\n            \"prefixFontSize\":\"50%\",\n            \"rangeMaps\":[
    \ \n                {  \n                    \"from\":\"null\",\n                    \"text\":\"N/A\",\n
    \                   \"to\":\"null\"\n                }\n            ],\n            \"sparkline\":{
    \ \n                \"fillColor\":\"rgba(31, 118, 189, 0.18)\",\n                \"full\":false,\n
    \               \"lineColor\":\"rgb(31, 120, 193)\",\n                \"show\":false\n
    \           },\n            \"tableColumn\":\"label_cloud_google_com_gke_preemptible\",\n
    \           \"targets\":[  \n                {  \n                    \"expr\":\"#
    CPU\\nsum(\\n (\\n (\\n sum(kube_node_status_capacity_cpu_cores) by (node)\\n
    * on (node) group_left (label_cloud_google_com_gke_preemptible)\\n avg(kube_node_labels{label_cloud_google_com_gke_preemptible=\\\"true\\\"})
    by (node)\\n ) * $costpcpu\\n )\\n or\\n (\\n (\\n sum(kube_node_status_capacity_cpu_cores)
    by (node)\\n * on (node) group_left (label_cloud_google_com_gke_preemptible)\\n
    avg(kube_node_labels{label_cloud_google_com_gke_preemptible!=\\\"true\\\"}) by
    (node)\\n ) * ($costcpu - ($costcpu / 100 * $costDiscount))\\n )\\n) \\n\\n+ \\n\\n#
    Storage\\nsum (\\n sum(kube_persistentvolumeclaim_info{storageclass=~\\\".*ssd.*\\\"})
    by (persistentvolumeclaim, namespace, storageclass)\\n + on (persistentvolumeclaim,
    namespace) group_right(storageclass)\\n sum(kube_persistentvolumeclaim_resource_requests_storage_bytes)
    by (persistentvolumeclaim, namespace) or up * 0\\n) / 1024 / 1024 /1024 * $costStorageSSD\\n\\n+\\n\\nsum
    (\\n sum(kube_persistentvolumeclaim_info{storageclass!~\\\".*ssd.*\\\"}) by (persistentvolumeclaim,
    namespace, storageclass)\\n + on (persistentvolumeclaim, namespace) group_right(storageclass)\\n
    sum(kube_persistentvolumeclaim_resource_requests_storage_bytes) by (persistentvolumeclaim,
    namespace) or up * 0\\n) / 1024 / 1024 /1024 * $costStorageStandard\\n\\n+ \\n\\nsum(container_fs_limit_bytes{id=\\\"/\\\"})
    / 1024 / 1024 / 1024 * 1.03 * $costStorageStandard \\n\\n+\\n\\n# END STORAGE\\n#
    RAM \\nsum(\\n (\\n (\\n sum(kube_node_status_capacity_memory_bytes) by (node)\\n
    * on (node) group_left (label_cloud_google_com_gke_preemptible)\\n avg(kube_node_labels{label_cloud_google_com_gke_preemptible=\\\"true\\\"})
    by (node)\\n ) /1024/1024/1024 * $costpram\\n )\\n or\\n (\\n (\\n sum(kube_node_status_capacity_memory_bytes)
    by (node)\\n * on (node) group_left (label_cloud_google_com_gke_preemptible)\\n
    avg(kube_node_labels{label_cloud_google_com_gke_preemptible!=\\\"true\\\"}) by
    (node)\\n ) /1024/1024/1024 * ($costram - ($costram / 100 * $costDiscount))\\n)\\n)\\n\\n+\\n\\n#Network
    \\nSUM(rate(node_network_transmit_bytes_total{device=\\\"eth0\\\"}[60m]) / 1024
    / 1024 / 1024 ) * (60 * 60 * 24 * 30) * $costEgress\",\n                    \"format\":\"time_series\",\n
    \                   \"instant\":true,\n                    \"interval\":\"\",\n
    \                   \"intervalFactor\":1,\n                    \"legendFormat\":\"
    {{ node }}\",\n                    \"refId\":\"A\"\n                }\n            ],\n
    \           \"thresholds\":\"\",\n            \"timeFrom\":\"15m\",\n            \"timeShift\":null,\n
    \           \"title\":\"Total Monthly Cost\",\n            \"type\":\"singlestat\",\n
    \           \"valueFontSize\":\"120%\",\n            \"valueMaps\":[  \n                {
    \ \n                    \"op\":\"=\",\n                    \"text\":\"N/A\",\n
    \                   \"value\":\"null\"\n                }\n            ],\n            \"valueName\":\"current\"\n
    \       },\n        {  \n            \"aliasColors\":{  \n\n            },\n            \"bars\":false,\n
    \           \"dashLength\":10,\n            \"dashes\":false,\n            \"datasource\":\"Prometheus\",\n
    \           \"description\":\"Expected monthly CPU, memory and storage costs given
    provisioned resources\",\n            \"fill\":1,\n            \"gridPos\":{  \n
    \               \"h\":8,\n                \"w\":12,\n                \"x\":0,\n
    \               \"y\":10\n            },\n            \"id\":120,\n            \"legend\":{
    \ \n                \"avg\":false,\n                \"current\":false,\n                \"max\":false,\n
    \               \"min\":false,\n                \"show\":false,\n                \"total\":false,\n
    \               \"values\":false\n            },\n            \"lines\":true,\n
    \           \"linewidth\":1,\n            \"links\":[  \n\n            ],\n            \"nullPointMode\":\"null\",\n
    \           \"percentage\":false,\n            \"pointradius\":5,\n            \"points\":false,\n
    \           \"renderer\":\"flot\",\n            \"seriesOverrides\":[  \n\n            ],\n
    \           \"spaceLength\":10,\n            \"stack\":false,\n            \"steppedLine\":false,\n
    \           \"targets\":[  \n                {  \n                    \"expr\":\"#
    CPU\\nsum(\\n (\\n (\\n sum(kube_node_status_capacity_cpu_cores) by (node)\\n
    * on (node) group_left (label_cloud_google_com_gke_preemptible)\\n avg(kube_node_labels{label_cloud_google_com_gke_preemptible=\\\"true\\\"})
    by (node)\\n ) * $costpcpu\\n )\\n or\\n (\\n (\\n sum(kube_node_status_capacity_cpu_cores)
    by (node)\\n * on (node) group_left (label_cloud_google_com_gke_preemptible)\\n
    avg(kube_node_labels{label_cloud_google_com_gke_preemptible!=\\\"true\\\"}) by
    (node)\\n ) * ($costcpu - ($costcpu / 100 * $costDiscount))\\n )\\n) \\n\\n+ \\n\\n#
    Storage\\nsum (\\n sum(kube_persistentvolumeclaim_info{storageclass=~\\\".*ssd.*\\\"})
    by (persistentvolumeclaim, namespace, storageclass)\\n + on (persistentvolumeclaim,
    namespace) group_right(storageclass)\\n sum(kube_persistentvolumeclaim_resource_requests_storage_bytes)
    by (persistentvolumeclaim, namespace) or up * 0\\n) / 1024 / 1024 /1024 * $costStorageSSD\\n\\n+\\n\\nsum
    (\\n sum(kube_persistentvolumeclaim_info{storageclass!~\\\".*ssd.*\\\"}) by (persistentvolumeclaim,
    namespace, storageclass)\\n + on (persistentvolumeclaim, namespace) group_right(storageclass)\\n
    sum(kube_persistentvolumeclaim_resource_requests_storage_bytes) by (persistentvolumeclaim,
    namespace) or up * 0\\n) / 1024 / 1024 /1024 * $costStorageStandard\\n\\n+ \\n\\nsum(container_fs_limit_bytes{id=\\\"/\\\"})
    / 1024 / 1024 / 1024 * 1.03 * $costStorageStandard \\n\\n+\\n\\n# END STORAGE\\n#
    RAM \\nsum(\\n (\\n (\\n sum(kube_node_status_capacity_memory_bytes) by (node)\\n
    * on (node) group_left (label_cloud_google_com_gke_preemptible)\\n avg(kube_node_labels{label_cloud_google_com_gke_preemptible=\\\"true\\\"})
    by (node)\\n ) /1024/1024/1024 * $costpram\\n )\\n or\\n (\\n (\\n sum(kube_node_status_capacity_memory_bytes)
    by (node)\\n * on (node) group_left (label_cloud_google_com_gke_preemptible)\\n
    avg(kube_node_labels{label_cloud_google_com_gke_preemptible!=\\\"true\\\"}) by
    (node)\\n ) /1024/1024/1024 * ($costram - ($costram / 100 * $costDiscount))\\n)\\n)
    \\n\\n+\\n\\n#Network \\nSUM(rate(node_network_transmit_bytes_total{device=\\\"eth0\\\"}[60m])
    / 1024 / 1024 / 1024 ) * (60 * 60 * 24 * 30) * $costEgress\",\n                    \"format\":\"time_series\",\n
    \                   \"intervalFactor\":1,\n                    \"legendFormat\":\"cluster
    cost\",\n                    \"refId\":\"A\"\n                }\n            ],\n
    \           \"thresholds\":[  \n\n            ],\n            \"timeFrom\":null,\n
    \           \"timeShift\":null,\n            \"title\":\"Total monthly cost\",\n
    \           \"tooltip\":{  \n                \"shared\":true,\n                \"sort\":0,\n
    \               \"value_type\":\"individual\"\n            },\n            \"type\":\"graph\",\n
    \           \"xaxis\":{  \n                \"buckets\":null,\n                \"mode\":\"time\",\n
    \               \"name\":null,\n                \"show\":true,\n                \"values\":[
    \ \n\n                ]\n            },\n            \"yaxes\":[  \n                {
    \ \n                    \"format\":\"currencyUSD\",\n                    \"label\":null,\n
    \                   \"logBase\":1,\n                    \"max\":null,\n                    \"min\":null,\n
    \                   \"show\":true\n                },\n                {  \n                    \"format\":\"short\",\n
    \                   \"label\":null,\n                    \"logBase\":1,\n                    \"max\":null,\n
    \                   \"min\":null,\n                    \"show\":true\n                }\n
    \           ],\n            \"yaxis\":{  \n                \"align\":false,\n
    \               \"alignLevel\":null\n            }\n        },\n        {  \n
    \           \"columns\":[  \n                {  \n                    \"text\":\"Avg\",\n
    \                   \"value\":\"avg\"\n                }\n            ],\n            \"datasource\":\"Prometheus\",\n
    \           \"description\":\"Resources allocated to namespace based on container
    requests\",\n            \"fontSize\":\"100%\",\n            \"gridPos\":{  \n
    \               \"h\":8,\n                \"w\":12,\n                \"x\":12,\n
    \               \"y\":10\n            },\n            \"hideTimeOverride\":false,\n
    \           \"id\":73,\n            \"links\":[  \n\n            ],\n            \"pageSize\":10,\n
    \           \"repeat\":null,\n            \"repeatDirection\":\"v\",\n            \"scroll\":true,\n
    \           \"showHeader\":true,\n            \"sort\":{  \n                \"col\":7,\n
    \               \"desc\":true\n            },\n            \"styles\":[  \n                {
    \ \n                    \"alias\":\"Namespace\",\n                    \"colorMode\":null,\n
    \                   \"colors\":[  \n                        \"rgba(245, 54, 54,
    0.9)\",\n                        \"rgba(50, 172, 45, 0.97)\",\n                        \"#c15c17\"\n
    \                   ],\n                    \"dateFormat\":\"YYYY-MM-DD HH:mm:ss\",\n
    \                   \"decimals\":2,\n                    \"link\":true,\n                    \"linkTooltip\":\"View
    namespace cost metrics\",\n                    \"linkUrl\":\"d/at-cost-analysis-namespace2/namespace-cost-metrics?&var-namespace=$__cell\",\n
    \                   \"pattern\":\"namespace\",\n                    \"thresholds\":[
    \ \n                        \"30\",\n                        \"80\"\n                    ],\n
    \                   \"type\":\"string\",\n                    \"unit\":\"currencyUSD\"\n
    \               },\n                {  \n                    \"alias\":\"RAM\",\n
    \                   \"colorMode\":null,\n                    \"colors\":[  \n
    \                       \"rgba(245, 54, 54, 0.9)\",\n                        \"rgba(237,
    129, 40, 0.89)\",\n                        \"rgba(50, 172, 45, 0.97)\"\n                    ],\n
    \                   \"dateFormat\":\"YYYY-MM-DD HH:mm:ss\",\n                    \"decimals\":2,\n
    \                   \"pattern\":\"Value #B\",\n                    \"thresholds\":[
    \ \n\n                    ],\n                    \"type\":\"number\",\n                    \"unit\":\"currencyUSD\"\n
    \               },\n                {  \n                    \"alias\":\"CPU\",\n
    \                   \"colorMode\":null,\n                    \"colors\":[  \n
    \                       \"rgba(245, 54, 54, 0.9)\",\n                        \"rgba(237,
    129, 40, 0.89)\",\n                        \"rgba(50, 172, 45, 0.97)\"\n                    ],\n
    \                   \"dateFormat\":\"YYYY-MM-DD HH:mm:ss\",\n                    \"decimals\":2,\n
    \                   \"mappingType\":1,\n                    \"pattern\":\"Value
    #A\",\n                    \"thresholds\":[  \n\n                    ],\n                    \"type\":\"number\",\n
    \                   \"unit\":\"currencyUSD\"\n                },\n                {
    \ \n                    \"alias\":\"\",\n                    \"colorMode\":null,\n
    \                   \"colors\":[  \n                        \"rgba(245, 54, 54,
    0.9)\",\n                        \"rgba(237, 129, 40, 0.89)\",\n                        \"rgba(50,
    172, 45, 0.97)\"\n                    ],\n                    \"dateFormat\":\"YYYY-MM-DD
    HH:mm:ss\",\n                    \"decimals\":2,\n                    \"mappingType\":1,\n
    \                   \"pattern\":\"Time\",\n                    \"thresholds\":[
    \ \n\n                    ],\n                    \"type\":\"hidden\",\n                    \"unit\":\"short\"\n
    \               },\n                {  \n                    \"alias\":\"PV Storage\",\n
    \                   \"colorMode\":null,\n                    \"colors\":[  \n
    \                       \"rgba(245, 54, 54, 0.9)\",\n                        \"rgba(237,
    129, 40, 0.89)\",\n                        \"rgba(50, 172, 45, 0.97)\"\n                    ],\n
    \                   \"dateFormat\":\"YYYY-MM-DD HH:mm:ss\",\n                    \"decimals\":2,\n
    \                   \"mappingType\":1,\n                    \"pattern\":\"Value
    #C\",\n                    \"thresholds\":[  \n\n                    ],\n                    \"type\":\"number\",\n
    \                   \"unit\":\"currencyUSD\"\n                },\n                {
    \ \n                    \"alias\":\"Total\",\n                    \"colorMode\":null,\n
    \                   \"colors\":[  \n                        \"rgba(245, 54, 54,
    0.9)\",\n                        \"rgba(237, 129, 40, 0.89)\",\n                        \"rgba(50,
    172, 45, 0.97)\"\n                    ],\n                    \"dateFormat\":\"YYYY-MM-DD
    HH:mm:ss\",\n                    \"decimals\":2,\n                    \"mappingType\":1,\n
    \                   \"pattern\":\"Value #D\",\n                    \"thresholds\":[
    \ \n\n                    ],\n                    \"type\":\"number\",\n                    \"unit\":\"currencyUSD\"\n
    \               },\n                {  \n                    \"alias\":\"CPU Utilization\",\n
    \                   \"colorMode\":\"value\",\n                    \"colors\":[
    \ \n                        \"#bf1b00\",\n                        \"rgba(50, 172,
    45, 0.97)\",\n                        \"#ef843c\"\n                    ],\n                    \"dateFormat\":\"YYYY-MM-DD
    HH:mm:ss\",\n                    \"decimals\":2,\n                    \"mappingType\":1,\n
    \                   \"pattern\":\"Value #E\",\n                    \"thresholds\":[
    \ \n                        \"30\",\n                        \"80\"\n                    ],\n
    \                   \"type\":\"number\",\n                    \"unit\":\"percent\"\n
    \               },\n                {  \n                    \"alias\":\"RAM Utilization\",\n
    \                   \"colorMode\":\"value\",\n                    \"colors\":[
    \ \n                        \"rgba(245, 54, 54, 0.9)\",\n                        \"rgba(50,
    172, 45, 0.97)\",\n                        \"#ef843c\"\n                    ],\n
    \                   \"dateFormat\":\"YYYY-MM-DD HH:mm:ss\",\n                    \"decimals\":2,\n
    \                   \"mappingType\":1,\n                    \"pattern\":\"Value
    #F\",\n                    \"thresholds\":[  \n                        \"30\",\n
    \                       \"80\"\n                    ],\n                    \"type\":\"number\",\n
    \                   \"unit\":\"percent\"\n                }\n            ],\n
    \           \"targets\":[  \n                {  \n                    \"expr\":\"(\\n
    sum(kube_pod_container_resource_requests_cpu_cores{namespace!=\\\"\\\",namespace!=\\\"kube-system\\\",cloud_google_com_gke_preemptible!=\\\"true\\\"}*($costcpu
    - ($costcpu / 100 * $costDiscount))) by(namespace)\\n or\\n count(\\n count(container_spec_cpu_shares{namespace!=\\\"\\\",namespace!=\\\"kube-system\\\"})
    by(namespace)\\n ) by(namespace) -1\\n)\\n\\n+\\n\\n(\\n sum(kube_pod_container_resource_requests_cpu_cores{namespace!=\\\"\\\",namespace!=\\\"kube-system\\\",cloud_google_com_gke_preemptible=\\\"true\\\"}*$costpcpu)
    by(namespace)\\n or\\n count(\\n count(container_spec_cpu_shares{namespace!=\\\"\\\",namespace!=\\\"kube-system\\\"})
    by(namespace)\\n ) by(namespace) -1\\n)\",\n                    \"format\":\"table\",\n
    \                   \"hide\":false,\n                    \"instant\":true,\n                    \"interval\":\"\",\n
    \                   \"intervalFactor\":1,\n                    \"legendFormat\":\"{{
    namespace }}\",\n                    \"refId\":\"A\"\n                },\n                {
    \ \n                    \"expr\":\"(\\n sum(kube_pod_container_resource_requests_memory_bytes{namespace!=\\\"\\\",namespace!=\\\"kube-system\\\",cloud_google_com_gke_preemptible!=\\\"true\\\"}
    / 1024 / 1024 / 1024*($costram- ($costram / 100 * $costDiscount))) by (namespace)
    \\n or\\n count(\\n count(container_spec_memory_limit_bytes{namespace!=\\\"\\\",namespace!=\\\"kube-system\\\"})
    by(namespace)\\n ) by(namespace) -1\\n)\\n\\n+\\n\\n(\\n sum(kube_pod_container_resource_requests_memory_bytes{namespace!=\\\"\\\",namespace!=\\\"kube-system\\\",cloud_google_com_gke_preemptible=\\\"true\\\"}
    / 1024 / 1024 / 1024 * $costpram ) by (namespace) \\n or\\n count(\\n count(container_spec_memory_limit_bytes{namespace!=\\\"\\\",namespace!=\\\"kube-system\\\"})
    by(namespace)\\n ) by(namespace) -1\\n)\",\n                    \"format\":\"table\",\n
    \                   \"instant\":true,\n                    \"intervalFactor\":1,\n
    \                   \"legendFormat\":\"{{ namespace }}\",\n                    \"refId\":\"B\"\n
    \               },\n                {  \n                    \"expr\":\"sum (\\n
    sum(kube_persistentvolumeclaim_info{storageclass=~\\\".*ssd.*\\\"}) by (persistentvolumeclaim,
    namespace, storageclass)\\n + on (persistentvolumeclaim, namespace) group_right(storageclass)\\n
    sum(kube_persistentvolumeclaim_resource_requests_storage_bytes) by (persistentvolumeclaim,
    namespace) \\n) by (namespace) / 1024 / 1024 /1024 * $costStorageSSD \\n\\nor\\n\\nsum
    (\\n sum(kube_persistentvolumeclaim_info{storageclass!~\\\".*ssd.*\\\"}) by (persistentvolumeclaim,
    namespace, storageclass)\\n + on (persistentvolumeclaim, namespace) group_right(storageclass)\\n
    sum(kube_persistentvolumeclaim_resource_requests_storage_bytes) by (persistentvolumeclaim,
    namespace) \\n) by (namespace) / 1024 / 1024 /1024 * $costStorageStandard\",\n
    \                   \"format\":\"table\",\n                    \"instant\":true,\n
    \                   \"intervalFactor\":1,\n                    \"legendFormat\":\"{{
    namespace }}\",\n                    \"refId\":\"C\"\n                },\n                {
    \ \n                    \"expr\":\"# CPU \\n(\\n sum(kube_pod_container_resource_requests_cpu_cores{namespace!=\\\"\\\",namespace!=\\\"kube-system\\\",cloud_google_com_gke_preemptible!=\\\"true\\\"}*($costcpu
    - ($costcpu / 100 * $costDiscount))) by(namespace)\\n or\\n count(\\n count(container_spec_cpu_shares{namespace!=\\\"\\\",namespace!=\\\"kube-system\\\"})
    by(namespace)\\n ) by(namespace) -1\\n)\\n\\n+\\n\\n(\\n sum(kube_pod_container_resource_requests_cpu_cores{namespace!=\\\"\\\",namespace!=\\\"kube-system\\\",cloud_google_com_gke_preemptible=\\\"true\\\"}*$costpcpu)
    by(namespace)\\n or\\n count(\\n count(container_spec_cpu_shares{namespace!=\\\"\\\",namespace!=\\\"kube-system\\\"})
    by(namespace)\\n ) by(namespace) -1\\n)\\n\\n+\\n\\n#END CPU \\n# Memory \\n\\n(\\n
    sum(kube_pod_container_resource_requests_memory_bytes{namespace!=\\\"\\\",namespace!=\\\"kube-system\\\",cloud_google_com_gke_preemptible!=\\\"true\\\"}
    / 1024 / 1024 / 1024*($costram- ($costram / 100 * $costDiscount))) by (namespace)
    \\n or\\n count(\\n count(container_spec_memory_limit_bytes{namespace!=\\\"\\\",namespace!=\\\"kube-system\\\"})
    by(namespace)\\n ) by(namespace) -1\\n)\\n\\n+\\n\\n(\\n sum(kube_pod_container_resource_requests_memory_bytes{namespace!=\\\"\\\",namespace!=\\\"kube-system\\\",cloud_google_com_gke_preemptible=\\\"true\\\"}
    / 1024 / 1024 / 1024 * $costpram ) by (namespace) \\n or\\n count(\\n count(container_spec_memory_limit_bytes{namespace!=\\\"\\\",namespace!=\\\"kube-system\\\"})
    by(namespace)\\n ) by(namespace) -1\\n)\\n\\n+\\n\\n# PV storage\\n\\n(\\nsum
    (\\n sum(kube_persistentvolumeclaim_info{storageclass=~\\\".*ssd.*\\\"}) by (persistentvolumeclaim,
    namespace, storageclass)\\n + on (persistentvolumeclaim, namespace) group_right(storageclass)\\n
    sum(kube_persistentvolumeclaim_resource_requests_storage_bytes) by (persistentvolumeclaim,
    namespace) \\n) by (namespace) / 1024 / 1024 /1024 * $costStorageSSD \\n\\nor\\n\\nsum
    (\\n sum(kube_persistentvolumeclaim_info{storageclass!~\\\".*ssd.*\\\"}) by (persistentvolumeclaim,
    namespace, storageclass)\\n + on (persistentvolumeclaim, namespace) group_right(storageclass)\\n
    sum(kube_persistentvolumeclaim_resource_requests_storage_bytes) by (persistentvolumeclaim,
    namespace) \\n) by (namespace) / 1024 / 1024 /1024 * $costStorageStandard \\n)\",\n
    \                   \"format\":\"table\",\n                    \"instant\":true,\n
    \                   \"intervalFactor\":1,\n                    \"legendFormat\":\"Total\",\n
    \                   \"refId\":\"D\"\n                }\n            ],\n            \"timeFrom\":\"\",\n
    \           \"timeShift\":null,\n            \"title\":\"Namespace cost allocation\",\n
    \           \"transform\":\"table\",\n            \"transparent\":false,\n            \"type\":\"table\"\n
    \       },\n        {  \n            \"collapsed\":false,\n            \"gridPos\":{
    \ \n                \"h\":1,\n                \"w\":24,\n                \"x\":0,\n
    \               \"y\":18\n            },\n            \"id\":108,\n            \"panels\":[
    \ \n\n            ],\n            \"title\":\"CPU Metrics\",\n            \"type\":\"row\"\n
    \       },\n        {  \n            \"aliasColors\":{  \n\n            },\n            \"bars\":false,\n
    \           \"dashLength\":10,\n            \"dashes\":false,\n            \"datasource\":\"Prometheus\",\n
    \           \"fill\":1,\n            \"gridPos\":{  \n                \"h\":8,\n
    \               \"w\":24,\n                \"x\":0,\n                \"y\":19\n
    \           },\n            \"id\":116,\n            \"legend\":{  \n                \"alignAsTable\":false,\n
    \               \"avg\":false,\n                \"current\":false,\n                \"max\":false,\n
    \               \"min\":false,\n                \"rightSide\":false,\n                \"show\":true,\n
    \               \"total\":false,\n                \"values\":false\n            },\n
    \           \"lines\":true,\n            \"linewidth\":1,\n            \"links\":[
    \ \n\n            ],\n            \"nullPointMode\":\"null\",\n            \"percentage\":false,\n
    \           \"pointradius\":5,\n            \"points\":false,\n            \"renderer\":\"flot\",\n
    \           \"seriesOverrides\":[  \n\n            ],\n            \"spaceLength\":10,\n
    \           \"stack\":false,\n            \"steppedLine\":false,\n            \"targets\":[
    \ \n                {  \n                    \"expr\":\"SUM(kube_node_status_capacity_cpu_cores)\",\n
    \                   \"format\":\"time_series\",\n                    \"intervalFactor\":1,\n
    \                   \"legendFormat\":\"capacity\",\n                    \"refId\":\"A\"\n
    \               },\n                {  \n                    \"expr\":\"SUM(kube_pod_container_resource_requests_cpu_cores)\",\n
    \                   \"format\":\"time_series\",\n                    \"intervalFactor\":1,\n
    \                   \"legendFormat\":\"requests\",\n                    \"refId\":\"C\"\n
    \               },\n                {  \n                    \"expr\":\"SUM(irate(container_cpu_usage_seconds_total{id=\\\"/\\\"}[5m]))\",\n
    \                   \"format\":\"time_series\",\n                    \"intervalFactor\":1,\n
    \                   \"legendFormat\":\"usage\",\n                    \"refId\":\"B\"\n
    \               },\n                {  \n                    \"expr\":\"SUM(kube_pod_container_resource_limits_cpu_cores)
    \",\n                    \"format\":\"time_series\",\n                    \"intervalFactor\":1,\n
    \                   \"legendFormat\":\"limits\",\n                    \"refId\":\"D\"\n
    \               }\n            ],\n            \"thresholds\":[  \n\n            ],\n
    \           \"timeFrom\":null,\n            \"timeShift\":null,\n            \"title\":\"Cluster
    CPUs\",\n            \"tooltip\":{  \n                \"shared\":true,\n                \"sort\":0,\n
    \               \"value_type\":\"individual\"\n            },\n            \"type\":\"graph\",\n
    \           \"xaxis\":{  \n                \"buckets\":null,\n                \"mode\":\"time\",\n
    \               \"name\":null,\n                \"show\":true,\n                \"values\":[
    \ \n\n                ]\n            },\n            \"yaxes\":[  \n                {
    \ \n                    \"decimals\":1,\n                    \"format\":\"short\",\n
    \                   \"label\":null,\n                    \"logBase\":1,\n                    \"max\":null,\n
    \                   \"min\":null,\n                    \"show\":true\n                },\n
    \               {  \n                    \"format\":\"short\",\n                    \"label\":null,\n
    \                   \"logBase\":1,\n                    \"max\":null,\n                    \"min\":null,\n
    \                   \"show\":true\n                }\n            ],\n            \"yaxis\":{
    \ \n                \"align\":false,\n                \"alignLevel\":null\n            }\n
    \       },\n        {  \n            \"aliasColors\":{  \n\n            },\n            \"bars\":false,\n
    \           \"dashLength\":10,\n            \"dashes\":false,\n            \"datasource\":\"Prometheus\",\n
    \           \"fill\":1,\n            \"gridPos\":{  \n                \"h\":8,\n
    \               \"w\":24,\n                \"x\":0,\n                \"y\":27\n
    \           },\n            \"id\":130,\n            \"legend\":{  \n                \"avg\":false,\n
    \               \"current\":false,\n                \"max\":false,\n                \"min\":false,\n
    \               \"show\":true,\n                \"total\":false,\n                \"values\":false\n
    \           },\n            \"lines\":true,\n            \"linewidth\":1,\n            \"links\":[
    \ \n\n            ],\n            \"nullPointMode\":\"null\",\n            \"percentage\":false,\n
    \           \"pointradius\":5,\n            \"points\":false,\n            \"renderer\":\"flot\",\n
    \           \"seriesOverrides\":[  \n\n            ],\n            \"spaceLength\":10,\n
    \           \"stack\":false,\n            \"steppedLine\":false,\n            \"targets\":[
    \ \n                {  \n                    \"expr\":\"avg(irate(node_cpu_seconds_total{mode!=\\\"idle\\\"}[5m]))
    by (mode) * 100\",\n                    \"format\":\"time_series\",\n                    \"intervalFactor\":1,\n
    \                   \"legendFormat\":\"{{mode}}\",\n                    \"refId\":\"A\"\n
    \               }\n            ],\n            \"thresholds\":[  \n\n            ],\n
    \           \"timeFrom\":null,\n            \"timeShift\":null,\n            \"title\":\"CPU
    Mode\",\n            \"tooltip\":{  \n                \"shared\":true,\n                \"sort\":0,\n
    \               \"value_type\":\"individual\"\n            },\n            \"type\":\"graph\",\n
    \           \"xaxis\":{  \n                \"buckets\":null,\n                \"mode\":\"time\",\n
    \               \"name\":null,\n                \"show\":true,\n                \"values\":[
    \ \n\n                ]\n            },\n            \"yaxes\":[  \n                {
    \ \n                    \"format\":\"percent\",\n                    \"label\":null,\n
    \                   \"logBase\":1,\n                    \"max\":null,\n                    \"min\":null,\n
    \                   \"show\":true\n                },\n                {  \n                    \"format\":\"percent\",\n
    \                   \"label\":null,\n                    \"logBase\":1,\n                    \"max\":null,\n
    \                   \"min\":null,\n                    \"show\":false\n                }\n
    \           ],\n            \"yaxis\":{  \n                \"align\":false,\n
    \               \"alignLevel\":null\n            }\n        },\n        {  \n
    \           \"columns\":[  \n                {  \n                    \"text\":\"Avg\",\n
    \                   \"value\":\"avg\"\n                }\n            ],\n            \"datasource\":\"Prometheus\",\n
    \           \"description\":\"This table shows the comparison of CPU requests
    and usage by namespace\",\n            \"fontSize\":\"100%\",\n            \"gridPos\":{
    \ \n                \"h\":10,\n                \"w\":12,\n                \"x\":0,\n
    \               \"y\":35\n            },\n            \"hideTimeOverride\":true,\n
    \           \"id\":104,\n            \"links\":[  \n\n            ],\n            \"pageSize\":8,\n
    \           \"repeatDirection\":\"v\",\n            \"scroll\":true,\n            \"showHeader\":true,\n
    \           \"sort\":{  \n                \"col\":1,\n                \"desc\":true\n
    \           },\n            \"styles\":[  \n                {  \n                    \"alias\":\"CPU
    Requests\",\n                    \"colorMode\":null,\n                    \"colors\":[
    \ \n                        \"#fceaca\",\n                        \"#fce2de\",\n
    \                       \"rgba(245, 54, 54, 0.9)\"\n                    ],\n                    \"dateFormat\":\"YYYY-MM-DD
    HH:mm:ss\",\n                    \"decimals\":2,\n                    \"mappingType\":1,\n
    \                   \"pattern\":\"Value #A\",\n                    \"thresholds\":[
    \ \n                        \"\"\n                    ],\n                    \"type\":\"number\",\n
    \                   \"unit\":\"short\"\n                },\n                {
    \ \n                    \"alias\":\"Node\",\n                    \"colorMode\":null,\n
    \                   \"colors\":[  \n                        \"rgba(245, 54, 54,
    0.9)\",\n                        \"rgba(237, 129, 40, 0.89)\",\n                        \"rgba(50,
    172, 45, 0.97)\"\n                    ],\n                    \"dateFormat\":\"YYYY-MM-DD
    HH:mm:ss\",\n                    \"decimals\":2,\n                    \"mappingType\":1,\n
    \                   \"pattern\":\"node\",\n                    \"thresholds\":[
    \ \n\n                    ],\n                    \"type\":\"string\",\n                    \"unit\":\"short\"\n
    \               },\n                {  \n                    \"alias\":\"\",\n
    \                   \"colorMode\":null,\n                    \"colors\":[  \n
    \                       \"rgba(245, 54, 54, 0.9)\",\n                        \"rgba(237,
    129, 40, 0.89)\",\n                        \"rgba(50, 172, 45, 0.97)\"\n                    ],\n
    \                   \"dateFormat\":\"YYYY-MM-DD HH:mm:ss\",\n                    \"decimals\":2,\n
    \                   \"mappingType\":1,\n                    \"pattern\":\"Time\",\n
    \                   \"thresholds\":[  \n\n                    ],\n                    \"type\":\"hidden\",\n
    \                   \"unit\":\"short\"\n                },\n                {
    \ \n                    \"alias\":\"CPU Requests\",\n                    \"colorMode\":\"value\",\n
    \                   \"colors\":[  \n                        \"rgba(245, 54, 54,
    0.9)\",\n                        \"rgba(50, 172, 45, 0.97)\",\n                        \"#cffaff\"\n
    \                   ],\n                    \"dateFormat\":\"YYYY-MM-DD HH:mm:ss\",\n
    \                   \"decimals\":2,\n                    \"mappingType\":1,\n
    \                   \"pattern\":\"Value #B\",\n                    \"thresholds\":[
    \ \n                        \"\"\n                    ],\n                    \"type\":\"number\",\n
    \                   \"unit\":\"short\"\n                },\n                {
    \ \n                    \"alias\":\"24h CPU Usage\",\n                    \"colorMode\":null,\n
    \                   \"colors\":[  \n                        \"rgba(245, 54, 54,
    0.9)\",\n                        \"rgba(237, 129, 40, 0.89)\",\n                        \"rgba(50,
    172, 45, 0.97)\"\n                    ],\n                    \"dateFormat\":\"YYYY-MM-DD
    HH:mm:ss\",\n                    \"decimals\":2,\n                    \"mappingType\":1,\n
    \                   \"pattern\":\"Value #C\",\n                    \"thresholds\":[
    \ \n                        \"30\"\n                    ],\n                    \"type\":\"number\",\n
    \                   \"unit\":\"none\"\n                },\n                {  \n
    \                   \"alias\":\"\",\n                    \"colorMode\":null,\n
    \                   \"colors\":[  \n                        \"rgba(245, 54, 54,
    0.9)\",\n                        \"rgba(237, 129, 40, 0.89)\",\n                        \"rgba(50,
    172, 45, 0.97)\"\n                    ],\n                    \"dateFormat\":\"YYYY-MM-DD
    HH:mm:ss\",\n                    \"decimals\":2,\n                    \"link\":true,\n
    \                   \"linkTooltip\":\"View namespace cost metrics\",\n                    \"linkUrl\":\"d/at-cost-analysis-namespace2/namespace-cost-metrics?&var-namespace=$__cell\",\n
    \                   \"mappingType\":1,\n                    \"pattern\":\"namespace\",\n
    \                   \"thresholds\":[  \n\n                    ],\n                    \"type\":\"number\",\n
    \                   \"unit\":\"short\"\n                }\n            ],\n            \"targets\":[
    \ \n                {  \n                    \"expr\":\"sum(kube_pod_container_resource_requests_cpu_cores{namespace!=\\\"\\\"})
    by (namespace) \",\n                    \"format\":\"table\",\n                    \"hide\":false,\n
    \                   \"instant\":true,\n                    \"interval\":\"\",\n
    \                   \"intervalFactor\":1,\n                    \"legendFormat\":\"\",\n
    \                   \"refId\":\"A\"\n                },\n                {  \n
    \                   \"expr\":\"sum (rate (container_cpu_usage_seconds_total{image!=\\\"\\\",namespace!=\\\"\\\"}[24h]))
    by (namespace)\",\n                    \"format\":\"table\",\n                    \"instant\":true,\n
    \                   \"intervalFactor\":1,\n                    \"legendFormat\":\"{{
    namespace }}\",\n                    \"refId\":\"C\"\n                }\n            ],\n
    \           \"timeFrom\":null,\n            \"timeShift\":null,\n            \"title\":\"CPU
    request utilization by namespace\",\n            \"transform\":\"table\",\n            \"transparent\":false,\n
    \           \"type\":\"table\"\n        },\n        {  \n            \"columns\":[
    \ \n                {  \n                    \"text\":\"Avg\",\n                    \"value\":\"avg\"\n
    \               }\n            ],\n            \"datasource\":\"Prometheus\",\n
    \           \"description\":\"This table shows the comparison of application CPU
    usage vs the capacity of the node (measured over last 60 minutes)\",\n            \"fontSize\":\"100%\",\n
    \           \"gridPos\":{  \n                \"h\":10,\n                \"w\":12,\n
    \               \"x\":12,\n                \"y\":35\n            },\n            \"hideTimeOverride\":true,\n
    \           \"id\":90,\n            \"links\":[  \n\n            ],\n            \"pageSize\":8,\n
    \           \"repeatDirection\":\"v\",\n            \"scroll\":true,\n            \"showHeader\":true,\n
    \           \"sort\":{  \n                \"col\":2,\n                \"desc\":true\n
    \           },\n            \"styles\":[  \n                {  \n                    \"alias\":\"CPU
    Request Utilization\",\n                    \"colorMode\":\"value\",\n                    \"colors\":[
    \ \n                        \"#ef843c\",\n                        \"rgba(50, 172,
    45, 0.97)\",\n                        \"rgba(245, 54, 54, 0.9)\"\n                    ],\n
    \                   \"dateFormat\":\"YYYY-MM-DD HH:mm:ss\",\n                    \"decimals\":2,\n
    \                   \"mappingType\":1,\n                    \"pattern\":\"Value
    #A\",\n                    \"thresholds\":[  \n                        \".30\",\n
    \                       \" .80\"\n                    ],\n                    \"type\":\"number\",\n
    \                   \"unit\":\"percentunit\"\n                },\n                {
    \ \n                    \"alias\":\"Node\",\n                    \"colorMode\":null,\n
    \                   \"colors\":[  \n                        \"rgba(245, 54, 54,
    0.9)\",\n                        \"rgba(237, 129, 40, 0.89)\",\n                        \"rgba(50,
    172, 45, 0.97)\"\n                    ],\n                    \"dateFormat\":\"YYYY-MM-DD
    HH:mm:ss\",\n                    \"decimals\":2,\n                    \"mappingType\":1,\n
    \                   \"pattern\":\"node\",\n                    \"thresholds\":[
    \ \n\n                    ],\n                    \"type\":\"string\",\n                    \"unit\":\"short\"\n
    \               },\n                {  \n                    \"alias\":\"\",\n
    \                   \"colorMode\":null,\n                    \"colors\":[  \n
    \                       \"rgba(245, 54, 54, 0.9)\",\n                        \"rgba(237,
    129, 40, 0.89)\",\n                        \"rgba(50, 172, 45, 0.97)\"\n                    ],\n
    \                   \"dateFormat\":\"YYYY-MM-DD HH:mm:ss\",\n                    \"decimals\":2,\n
    \                   \"mappingType\":1,\n                    \"pattern\":\"Time\",\n
    \                   \"thresholds\":[  \n\n                    ],\n                    \"type\":\"hidden\",\n
    \                   \"unit\":\"short\"\n                },\n                {
    \ \n                    \"alias\":\"CPU Utilization\",\n                    \"colorMode\":\"value\",\n
    \                   \"colors\":[  \n                        \"#ef843c\",\n                        \"rgba(50,
    172, 45, 0.97)\",\n                        \"rgba(245, 54, 54, 0.9)\"\n                    ],\n
    \                   \"dateFormat\":\"YYYY-MM-DD HH:mm:ss\",\n                    \"decimals\":2,\n
    \                   \"mappingType\":1,\n                    \"pattern\":\"Value
    #B\",\n                    \"thresholds\":[  \n                        \".20\",\n
    \                       \" .80\"\n                    ],\n                    \"type\":\"number\",\n
    \                   \"unit\":\"percentunit\"\n                },\n                {
    \ \n                    \"alias\":\"24h Utilization \",\n                    \"colorMode\":null,\n
    \                   \"colors\":[  \n                        \"rgba(245, 54, 54,
    0.9)\",\n                        \"rgba(237, 129, 40, 0.89)\",\n                        \"rgba(50,
    172, 45, 0.97)\"\n                    ],\n                    \"dateFormat\":\"YYYY-MM-DD
    HH:mm:ss\",\n                    \"decimals\":2,\n                    \"mappingType\":1,\n
    \                   \"pattern\":\"Value\",\n                    \"thresholds\":[
    \ \n\n                    ],\n                    \"type\":\"number\",\n                    \"unit\":\"percentunit\"\n
    \               }\n            ],\n            \"targets\":[  \n                {
    \ \n                    \"expr\":\"SUM(\\nSUM(rate(container_cpu_usage_seconds_total[24h]))
    by (pod_name)\\n* on (pod_name) group_left (node) \\nlabel_replace(\\n avg(kube_pod_info{}),\\n
    \\\"pod_name\\\", \\n \\\"$1\\\", \\n \\\"pod\\\", \\n \\\"(.+)\\\"\\n)\\n) by
    (node) \\n/ \\nsum(kube_node_status_capacity_cpu_cores) by (node)\",\n                    \"format\":\"table\",\n
    \                   \"instant\":true,\n                    \"intervalFactor\":1,\n
    \                   \"refId\":\"B\"\n                },\n                {  \n
    \                   \"expr\":\"sum(kube_pod_container_resource_requests_cpu_cores)
    by (node) / sum(kube_node_status_capacity_cpu_cores) by (node)\",\n                    \"format\":\"table\",\n
    \                   \"instant\":true,\n                    \"intervalFactor\":1,\n
    \                   \"refId\":\"A\"\n                }\n            ],\n            \"timeFrom\":null,\n
    \           \"timeShift\":null,\n            \"title\":\"Cluster cost & utilization
    by node\",\n            \"transform\":\"table\",\n            \"transparent\":false,\n
    \           \"type\":\"table\"\n        },\n        {  \n            \"collapsed\":false,\n
    \           \"gridPos\":{  \n                \"h\":1,\n                \"w\":24,\n
    \               \"x\":0,\n                \"y\":45\n            },\n            \"id\":113,\n
    \           \"panels\":[  \n\n            ],\n            \"title\":\"Memory Metrics\",\n
    \           \"type\":\"row\"\n        },\n        {  \n            \"aliasColors\":{
    \ \n\n            },\n            \"bars\":false,\n            \"dashLength\":10,\n
    \           \"dashes\":false,\n            \"datasource\":\"Prometheus\",\n            \"fill\":1,\n
    \           \"gridPos\":{  \n                \"h\":8,\n                \"w\":24,\n
    \               \"x\":0,\n                \"y\":46\n            },\n            \"id\":117,\n
    \           \"legend\":{  \n                \"avg\":false,\n                \"current\":false,\n
    \               \"max\":false,\n                \"min\":false,\n                \"show\":false,\n
    \               \"total\":false,\n                \"values\":false\n            },\n
    \           \"lines\":true,\n            \"linewidth\":1,\n            \"links\":[
    \ \n\n            ],\n            \"nullPointMode\":\"null\",\n            \"percentage\":false,\n
    \           \"pointradius\":5,\n            \"points\":false,\n            \"renderer\":\"flot\",\n
    \           \"seriesOverrides\":[  \n\n            ],\n            \"spaceLength\":10,\n
    \           \"stack\":false,\n            \"steppedLine\":false,\n            \"targets\":[
    \ \n                {  \n                    \"expr\":\"SUM(kube_node_status_capacity_memory_bytes
    / 1024 / 1024 / 1024)\",\n                    \"format\":\"time_series\",\n                    \"intervalFactor\":1,\n
    \                   \"legendFormat\":\"capacity\",\n                    \"refId\":\"A\"\n
    \               },\n                {  \n                    \"expr\":\"SUM(kube_pod_container_resource_requests_memory_bytes{namespace!=\\\"\\\"}
    / 1024 / 1024 / 1024)\",\n                    \"format\":\"time_series\",\n                    \"intervalFactor\":1,\n
    \                   \"legendFormat\":\"requests\",\n                    \"refId\":\"C\"\n
    \               },\n                {  \n                    \"expr\":\"SUM(container_memory_usage_bytes{image!=\\\"\\\"}
    / 1024 / 1024 / 1024)\",\n                    \"format\":\"time_series\",\n                    \"intervalFactor\":1,\n
    \                   \"legendFormat\":\"usage\",\n                    \"refId\":\"B\"\n
    \               },\n                {  \n                    \"expr\":\"SUM(kube_pod_container_resource_limits_memory_bytes
    {namespace!=\\\"\\\"} / 1024 / 1024 / 1024)\",\n                    \"format\":\"time_series\",\n
    \                   \"intervalFactor\":1,\n                    \"legendFormat\":\"limits\",\n
    \                   \"refId\":\"D\"\n                }\n            ],\n            \"thresholds\":[
    \ \n\n            ],\n            \"timeFrom\":null,\n            \"timeShift\":null,\n
    \           \"title\":\"Cluster memory (GB)\",\n            \"tooltip\":{  \n
    \               \"shared\":true,\n                \"sort\":0,\n                \"value_type\":\"individual\"\n
    \           },\n            \"type\":\"graph\",\n            \"xaxis\":{  \n                \"buckets\":null,\n
    \               \"mode\":\"time\",\n                \"name\":null,\n                \"show\":true,\n
    \               \"values\":[  \n\n                ]\n            },\n            \"yaxes\":[
    \ \n                {  \n                    \"format\":\"decgbytes\",\n                    \"label\":null,\n
    \                   \"logBase\":1,\n                    \"max\":null,\n                    \"min\":null,\n
    \                   \"show\":true\n                },\n                {  \n                    \"format\":\"short\",\n
    \                   \"label\":null,\n                    \"logBase\":1,\n                    \"max\":null,\n
    \                   \"min\":null,\n                    \"show\":true\n                }\n
    \           ],\n            \"yaxis\":{  \n                \"align\":false,\n
    \               \"alignLevel\":null\n            }\n        },\n        {  \n
    \           \"aliasColors\":{  \n\n            },\n            \"bars\":false,\n
    \           \"dashLength\":10,\n            \"dashes\":false,\n            \"datasource\":\"Prometheus\",\n
    \           \"fill\":1,\n            \"gridPos\":{  \n                \"h\":8,\n
    \               \"w\":24,\n                \"x\":0,\n                \"y\":54\n
    \           },\n            \"id\":131,\n            \"legend\":{  \n                \"avg\":false,\n
    \               \"current\":false,\n                \"max\":false,\n                \"min\":false,\n
    \               \"show\":false,\n                \"total\":false,\n                \"values\":false\n
    \           },\n            \"lines\":true,\n            \"linewidth\":1,\n            \"links\":[
    \ \n\n            ],\n            \"nullPointMode\":\"null\",\n            \"percentage\":false,\n
    \           \"pointradius\":5,\n            \"points\":false,\n            \"renderer\":\"flot\",\n
    \           \"seriesOverrides\":[  \n\n            ],\n            \"spaceLength\":10,\n
    \           \"stack\":false,\n            \"steppedLine\":false,\n            \"targets\":[
    \ \n                {  \n                    \"expr\":\"1 - sum(node_memory_MemAvailable_bytes)
    by (node) / sum(node_memory_MemTotal_bytes) by (node)\",\n                    \"format\":\"time_series\",\n
    \                   \"intervalFactor\":1,\n                    \"legendFormat\":\"usage\",\n
    \                   \"refId\":\"A\"\n                }\n            ],\n            \"thresholds\":[
    \ \n\n            ],\n            \"timeFrom\":null,\n            \"timeShift\":null,\n
    \           \"title\":\"Cluster Memory Utilization\",\n            \"tooltip\":{
    \ \n                \"shared\":true,\n                \"sort\":0,\n                \"value_type\":\"individual\"\n
    \           },\n            \"type\":\"graph\",\n            \"xaxis\":{  \n                \"buckets\":null,\n
    \               \"mode\":\"time\",\n                \"name\":null,\n                \"show\":true,\n
    \               \"values\":[  \n\n                ]\n            },\n            \"yaxes\":[
    \ \n                {  \n                    \"format\":\"percentunit\",\n                    \"label\":null,\n
    \                   \"logBase\":1,\n                    \"max\":null,\n                    \"min\":null,\n
    \                   \"show\":true\n                },\n                {  \n                    \"format\":\"short\",\n
    \                   \"label\":null,\n                    \"logBase\":1,\n                    \"max\":null,\n
    \                   \"min\":null,\n                    \"show\":true\n                }\n
    \           ],\n            \"yaxis\":{  \n                \"align\":false,\n
    \               \"alignLevel\":null\n            }\n        },\n        {  \n
    \           \"columns\":[  \n                {  \n                    \"text\":\"Avg\",\n
    \                   \"value\":\"avg\"\n                }\n            ],\n            \"datasource\":\"Prometheus\",\n
    \           \"description\":\"Comparison of memory requests and current usage
    by namespace\",\n            \"fontSize\":\"100%\",\n            \"gridPos\":{
    \ \n                \"h\":10,\n                \"w\":12,\n                \"x\":0,\n
    \               \"y\":62\n            },\n            \"hideTimeOverride\":true,\n
    \           \"id\":109,\n            \"links\":[  \n\n            ],\n            \"pageSize\":7,\n
    \           \"repeatDirection\":\"v\",\n            \"scroll\":true,\n            \"showHeader\":true,\n
    \           \"sort\":{  \n                \"col\":1,\n                \"desc\":true\n
    \           },\n            \"styles\":[  \n                {  \n                    \"alias\":\"Mem
    Requests (GB)\",\n                    \"colorMode\":null,\n                    \"colors\":[
    \ \n                        \"#fceaca\",\n                        \"#fce2de\",\n
    \                       \"rgba(245, 54, 54, 0.9)\"\n                    ],\n                    \"dateFormat\":\"YYYY-MM-DD
    HH:mm:ss\",\n                    \"decimals\":2,\n                    \"mappingType\":1,\n
    \                   \"pattern\":\"Value #A\",\n                    \"thresholds\":[
    \ \n                        \"\"\n                    ],\n                    \"type\":\"number\",\n
    \                   \"unit\":\"short\"\n                },\n                {
    \ \n                    \"alias\":\"Node\",\n                    \"colorMode\":null,\n
    \                   \"colors\":[  \n                        \"rgba(245, 54, 54,
    0.9)\",\n                        \"rgba(237, 129, 40, 0.89)\",\n                        \"rgba(50,
    172, 45, 0.97)\"\n                    ],\n                    \"dateFormat\":\"YYYY-MM-DD
    HH:mm:ss\",\n                    \"decimals\":2,\n                    \"mappingType\":1,\n
    \                   \"pattern\":\"node\",\n                    \"thresholds\":[
    \ \n\n                    ],\n                    \"type\":\"string\",\n                    \"unit\":\"short\"\n
    \               },\n                {  \n                    \"alias\":\"\",\n
    \                   \"colorMode\":null,\n                    \"colors\":[  \n
    \                       \"rgba(245, 54, 54, 0.9)\",\n                        \"rgba(237,
    129, 40, 0.89)\",\n                        \"rgba(50, 172, 45, 0.97)\"\n                    ],\n
    \                   \"dateFormat\":\"YYYY-MM-DD HH:mm:ss\",\n                    \"decimals\":2,\n
    \                   \"mappingType\":1,\n                    \"pattern\":\"Time\",\n
    \                   \"thresholds\":[  \n\n                    ],\n                    \"type\":\"hidden\",\n
    \                   \"unit\":\"short\"\n                },\n                {
    \ \n                    \"alias\":\"CPU Requests\",\n                    \"colorMode\":\"value\",\n
    \                   \"colors\":[  \n                        \"rgba(245, 54, 54,
    0.9)\",\n                        \"rgba(50, 172, 45, 0.97)\",\n                        \"#cffaff\"\n
    \                   ],\n                    \"dateFormat\":\"YYYY-MM-DD HH:mm:ss\",\n
    \                   \"decimals\":2,\n                    \"mappingType\":1,\n
    \                   \"pattern\":\"Value #B\",\n                    \"thresholds\":[
    \ \n                        \"\"\n                    ],\n                    \"type\":\"number\",\n
    \                   \"unit\":\"short\"\n                },\n                {
    \ \n                    \"alias\":\"24h Mem Usage\",\n                    \"colorMode\":null,\n
    \                   \"colors\":[  \n                        \"rgba(245, 54, 54,
    0.9)\",\n                        \"#508642\",\n                        \"#e5ac0e\"\n
    \                   ],\n                    \"dateFormat\":\"YYYY-MM-DD HH:mm:ss\",\n
    \                   \"decimals\":2,\n                    \"mappingType\":1,\n
    \                   \"pattern\":\"Value #C\",\n                    \"thresholds\":[
    \ \n                        \".30\",\n                        \".75\"\n                    ],\n
    \                   \"type\":\"number\",\n                    \"unit\":\"none\"\n
    \               },\n                {  \n                    \"alias\":\"Namespace\",\n
    \                   \"colorMode\":null,\n                    \"colors\":[  \n
    \                       \"rgba(245, 54, 54, 0.9)\",\n                        \"rgba(237,
    129, 40, 0.89)\",\n                        \"rgba(50, 172, 45, 0.97)\"\n                    ],\n
    \                   \"dateFormat\":\"YYYY-MM-DD HH:mm:ss\",\n                    \"decimals\":2,\n
    \                   \"link\":true,\n                    \"linkTooltip\":\"View
    namespace cost metrics\",\n                    \"linkUrl\":\"d/at-cost-analysis-namespace2/namespace-cost-metrics?&var-namespace=$__cell\",\n
    \                   \"mappingType\":1,\n                    \"pattern\":\"namespace\",\n
    \                   \"thresholds\":[  \n\n                    ],\n                    \"type\":\"number\",\n
    \                   \"unit\":\"short\"\n                }\n            ],\n            \"targets\":[
    \ \n                {  \n                    \"expr\":\"sum(kube_pod_container_resource_requests_memory_bytes{namespace!=\\\"\\\"}
    / 1024 / 1024 / 1024) by (namespace) \",\n                    \"format\":\"table\",\n
    \                   \"hide\":false,\n                    \"instant\":true,\n                    \"interval\":\"\",\n
    \                   \"intervalFactor\":1,\n                    \"legendFormat\":\"\",\n
    \                   \"refId\":\"A\"\n                },\n                {  \n
    \                   \"expr\":\"SUM(container_memory_usage_bytes{image!=\\\"\\\",namespace!=\\\"\\\"}
    / 1024 / 1024 / 1024) by (namespace)\",\n                    \"format\":\"table\",\n
    \                   \"instant\":true,\n                    \"intervalFactor\":1,\n
    \                   \"legendFormat\":\"\",\n                    \"refId\":\"C\"\n
    \               }\n            ],\n            \"timeFrom\":null,\n            \"timeShift\":null,\n
    \           \"title\":\"Memory requests & utilization by namespace\",\n            \"transform\":\"table\",\n
    \           \"transparent\":false,\n            \"type\":\"table\"\n        },\n
    \       {  \n            \"columns\":[  \n                {  \n                    \"text\":\"Avg\",\n
    \                   \"value\":\"avg\"\n                }\n            ],\n            \"datasource\":\"Prometheus\",\n
    \           \"description\":\"Container RAM usage vs node capacity\",\n            \"fontSize\":\"100%\",\n
    \           \"gridPos\":{  \n                \"h\":10,\n                \"w\":12,\n
    \               \"x\":12,\n                \"y\":62\n            },\n            \"hideTimeOverride\":true,\n
    \           \"id\":114,\n            \"links\":[  \n\n            ],\n            \"pageSize\":8,\n
    \           \"repeatDirection\":\"v\",\n            \"scroll\":true,\n            \"showHeader\":true,\n
    \           \"sort\":{  \n                \"col\":1,\n                \"desc\":true\n
    \           },\n            \"styles\":[  \n                {  \n                    \"alias\":\"RAM
    Requests\",\n                    \"colorMode\":\"value\",\n                    \"colors\":[
    \ \n                        \"#ef843c\",\n                        \"rgba(50, 172,
    45, 0.97)\",\n                        \"rgba(245, 54, 54, 0.9)\"\n                    ],\n
    \                   \"dateFormat\":\"YYYY-MM-DD HH:mm:ss\",\n                    \"decimals\":2,\n
    \                   \"mappingType\":1,\n                    \"pattern\":\"Value
    #A\",\n                    \"thresholds\":[  \n                        \"30\",\n
    \                       \" 80\"\n                    ],\n                    \"type\":\"number\",\n
    \                   \"unit\":\"percentunit\"\n                },\n                {
    \ \n                    \"alias\":\"Node\",\n                    \"colorMode\":null,\n
    \                   \"colors\":[  \n                        \"rgba(245, 54, 54,
    0.9)\",\n                        \"rgba(237, 129, 40, 0.89)\",\n                        \"rgba(50,
    172, 45, 0.97)\"\n                    ],\n                    \"dateFormat\":\"YYYY-MM-DD
    HH:mm:ss\",\n                    \"decimals\":2,\n                    \"mappingType\":1,\n
    \                   \"pattern\":\"node\",\n                    \"thresholds\":[
    \ \n\n                    ],\n                    \"type\":\"string\",\n                    \"unit\":\"short\"\n
    \               },\n                {  \n                    \"alias\":\"\",\n
    \                   \"colorMode\":null,\n                    \"colors\":[  \n
    \                       \"rgba(245, 54, 54, 0.9)\",\n                        \"rgba(237,
    129, 40, 0.89)\",\n                        \"rgba(50, 172, 45, 0.97)\"\n                    ],\n
    \                   \"dateFormat\":\"YYYY-MM-DD HH:mm:ss\",\n                    \"decimals\":2,\n
    \                   \"mappingType\":1,\n                    \"pattern\":\"Time\",\n
    \                   \"thresholds\":[  \n\n                    ],\n                    \"type\":\"hidden\",\n
    \                   \"unit\":\"short\"\n                },\n                {
    \ \n                    \"alias\":\"RAM Usage\",\n                    \"colorMode\":\"value\",\n
    \                   \"colors\":[  \n                        \"#ef843c\",\n                        \"rgba(50,
    172, 45, 0.97)\",\n                        \"rgba(245, 54, 54, 0.9)\"\n                    ],\n
    \                   \"dateFormat\":\"YYYY-MM-DD HH:mm:ss\",\n                    \"decimals\":2,\n
    \                   \"mappingType\":1,\n                    \"pattern\":\"Value
    #B\",\n                    \"thresholds\":[  \n                        \"25\",\n
    \                       \" 80\"\n                    ],\n                    \"type\":\"number\",\n
    \                   \"unit\":\"percent\"\n                },\n                {
    \ \n                    \"alias\":\"\",\n                    \"colorMode\":null,\n
    \                   \"colors\":[  \n                        \"rgba(245, 54, 54,
    0.9)\",\n                        \"rgba(237, 129, 40, 0.89)\",\n                        \"rgba(50,
    172, 45, 0.97)\"\n                    ],\n                    \"dateFormat\":\"YYYY-MM-DD
    HH:mm:ss\",\n                    \"decimals\":2,\n                    \"mappingType\":1,\n
    \                   \"pattern\":\"\",\n                    \"thresholds\":[  \n\n
    \                   ],\n                    \"type\":\"number\",\n                    \"unit\":\"short\"\n
    \               }\n            ],\n            \"targets\":[  \n                {
    \ \n                    \"expr\":\"SUM(label_replace(container_memory_usage_bytes{namespace!=\\\"\\\"},
    \\\"node\\\", \\\"$1\\\", \\\"instance\\\",\\\"(.+)\\\")) by (node) * 100\\n/\\nSUM(kube_node_status_capacity_memory_bytes)
    by (node)\",\n                    \"format\":\"table\",\n                    \"instant\":true,\n
    \                   \"intervalFactor\":1,\n                    \"refId\":\"B\"\n
    \               },\n                {  \n                    \"expr\":\"sum(kube_pod_container_resource_requests_memory_bytes{namespace!=\\\"\\\"})
    by (node) / SUM(kube_node_status_capacity_memory_bytes) by (node)\",\n                    \"format\":\"table\",\n
    \                   \"instant\":true,\n                    \"intervalFactor\":1,\n
    \                   \"refId\":\"A\"\n                }\n            ],\n            \"timeFrom\":null,\n
    \           \"timeShift\":null,\n            \"title\":\"Node utilization of allocatable
    RAM\",\n            \"transform\":\"table\",\n            \"transparent\":false,\n
    \           \"type\":\"table\"\n        },\n        {  \n            \"collapsed\":false,\n
    \           \"gridPos\":{  \n                \"h\":1,\n                \"w\":24,\n
    \               \"x\":0,\n                \"y\":72\n            },\n            \"id\":101,\n
    \           \"panels\":[  \n\n            ],\n            \"title\":\"Storage
    Metrics\",\n            \"type\":\"row\"\n        },\n        {  \n            \"columns\":[
    \ \n                {  \n                    \"text\":\"Avg\",\n                    \"value\":\"avg\"\n
    \               }\n            ],\n            \"datasource\":\"Prometheus\",\n
    \           \"fontSize\":\"100%\",\n            \"gridPos\":{  \n                \"h\":9,\n
    \               \"w\":12,\n                \"x\":0,\n                \"y\":73\n
    \           },\n            \"hideTimeOverride\":true,\n            \"id\":97,\n
    \           \"links\":[  \n\n            ],\n            \"pageSize\":8,\n            \"repeatDirection\":\"v\",\n
    \           \"scroll\":true,\n            \"showHeader\":true,\n            \"sort\":{
    \ \n                \"col\":4,\n                \"desc\":true\n            },\n
    \           \"styles\":[  \n                {  \n                    \"alias\":\"Node\",\n
    \                   \"colorMode\":null,\n                    \"colors\":[  \n
    \                       \"rgba(245, 54, 54, 0.9)\",\n                        \"rgba(237,
    129, 40, 0.89)\",\n                        \"rgba(50, 172, 45, 0.97)\"\n                    ],\n
    \                   \"dateFormat\":\"YYYY-MM-DD HH:mm:ss\",\n                    \"decimals\":2,\n
    \                   \"mappingType\":1,\n                    \"pattern\":\"instance\",\n
    \                   \"thresholds\":[  \n\n                    ],\n                    \"type\":\"string\",\n
    \                   \"unit\":\"short\"\n                },\n                {
    \ \n                    \"alias\":\"PVC Name\",\n                    \"colorMode\":null,\n
    \                   \"colors\":[  \n                        \"rgba(245, 54, 54,
    0.9)\",\n                        \"rgba(237, 129, 40, 0.89)\",\n                        \"rgba(50,
    172, 45, 0.97)\"\n                    ],\n                    \"dateFormat\":\"YYYY-MM-DD
    HH:mm:ss\",\n                    \"decimals\":2,\n                    \"mappingType\":1,\n
    \                   \"pattern\":\"persistentvolumeclaim\",\n                    \"thresholds\":[
    \ \n\n                    ],\n                    \"type\":\"number\",\n                    \"unit\":\"short\"\n
    \               },\n                {  \n                    \"alias\":\"Storage
    Class\",\n                    \"colorMode\":null,\n                    \"colors\":[
    \ \n                        \"rgba(245, 54, 54, 0.9)\",\n                        \"rgba(237,
    129, 40, 0.89)\",\n                        \"rgba(50, 172, 45, 0.97)\"\n                    ],\n
    \                   \"dateFormat\":\"YYYY-MM-DD HH:mm:ss\",\n                    \"decimals\":2,\n
    \                   \"mappingType\":1,\n                    \"pattern\":\"storageclass\",\n
    \                   \"thresholds\":[  \n\n                    ],\n                    \"type\":\"number\",\n
    \                   \"unit\":\"short\"\n                },\n                {
    \ \n                    \"alias\":\"Cost\",\n                    \"colorMode\":null,\n
    \                   \"colors\":[  \n                        \"rgba(245, 54, 54,
    0.9)\",\n                        \"rgba(237, 129, 40, 0.89)\",\n                        \"rgba(50,
    172, 45, 0.97)\"\n                    ],\n                    \"dateFormat\":\"YYYY-MM-DD
    HH:mm:ss\",\n                    \"decimals\":2,\n                    \"mappingType\":1,\n
    \                   \"pattern\":\"Value\",\n                    \"thresholds\":[
    \ \n\n                    ],\n                    \"type\":\"number\",\n                    \"unit\":\"currencyUSD\"\n
    \               },\n                {  \n                    \"alias\":\"\",\n
    \                   \"colorMode\":null,\n                    \"colors\":[  \n
    \                       \"rgba(245, 54, 54, 0.9)\",\n                        \"rgba(237,
    129, 40, 0.89)\",\n                        \"rgba(50, 172, 45, 0.97)\"\n                    ],\n
    \                   \"dateFormat\":\"YYYY-MM-DD HH:mm:ss\",\n                    \"decimals\":2,\n
    \                   \"mappingType\":1,\n                    \"pattern\":\"Time\",\n
    \                   \"thresholds\":[  \n\n                    ],\n                    \"type\":\"hidden\",\n
    \                   \"unit\":\"short\"\n                },\n                {
    \ \n                    \"alias\":\"Cost\",\n                    \"colorMode\":null,\n
    \                   \"colors\":[  \n                        \"rgba(245, 54, 54,
    0.9)\",\n                        \"rgba(237, 129, 40, 0.89)\",\n                        \"rgba(50,
    172, 45, 0.97)\"\n                    ],\n                    \"dateFormat\":\"YYYY-MM-DD
    HH:mm:ss\",\n                    \"decimals\":2,\n                    \"mappingType\":1,\n
    \                   \"pattern\":\"Value #A\",\n                    \"thresholds\":[
    \ \n\n                    ],\n                    \"type\":\"number\",\n                    \"unit\":\"currencyUSD\"\n
    \               },\n                {  \n                    \"alias\":\"Size
    (GB)\",\n                    \"colorMode\":null,\n                    \"colors\":[
    \ \n                        \"rgba(245, 54, 54, 0.9)\",\n                        \"rgba(237,
    129, 40, 0.89)\",\n                        \"rgba(50, 172, 45, 0.97)\"\n                    ],\n
    \                   \"dateFormat\":\"YYYY-MM-DD HH:mm:ss\",\n                    \"decimals\":2,\n
    \                   \"mappingType\":1,\n                    \"pattern\":\"Value
    #B\",\n                    \"thresholds\":[  \n\n                    ],\n                    \"type\":\"number\",\n
    \                   \"unit\":\"short\"\n                },\n                {
    \ \n                    \"alias\":\"Usage\",\n                    \"colorMode\":null,\n
    \                   \"colors\":[  \n                        \"rgba(245, 54, 54,
    0.9)\",\n                        \"rgba(237, 129, 40, 0.89)\",\n                        \"rgba(50,
    172, 45, 0.97)\"\n                    ],\n                    \"dateFormat\":\"YYYY-MM-DD
    HH:mm:ss\",\n                    \"decimals\":2,\n                    \"mappingType\":1,\n
    \                   \"pattern\":\"Value #C\",\n                    \"thresholds\":[
    \ \n\n                    ],\n                    \"type\":\"number\",\n                    \"unit\":\"percentunit\"\n
    \               }\n            ],\n            \"targets\":[  \n                {
    \ \n                    \"expr\":\"SUM(container_fs_limit_bytes{id=\\\"/\\\"})
    by (instance) / 1024 / 1024 / 1024 * 1.03\",\n                    \"format\":\"table\",\n
    \                   \"instant\":true,\n                    \"intervalFactor\":1,\n
    \                   \"refId\":\"B\"\n                },\n                {  \n
    \                   \"expr\":\"SUM(container_fs_limit_bytes{id=\\\"/\\\"}) by
    (instance) / 1024 / 1024 / 1024 * 1.03 * $costStorageStandard\\n\",\n                    \"format\":\"table\",\n
    \                   \"hide\":false,\n                    \"instant\":true,\n                    \"interval\":\"\",\n
    \                   \"intervalFactor\":1,\n                    \"legendFormat\":\"{{
    persistentvolumeclaim }}\",\n                    \"refId\":\"A\"\n                },\n
    \               {  \n                    \"expr\":\"sum(container_fs_usage_bytes{device=~\\\"^/dev/[sv]d[a-z][1-9]$\\\",id=\\\"/\\\"}
    / container_fs_limit_bytes{device=~\\\"^/dev/[sv]d[a-z][1-9]$\\\",id=\\\"/\\\"})
    by (instance) \\n\",\n                    \"format\":\"table\",\n                    \"instant\":true,\n
    \                   \"intervalFactor\":1,\n                    \"refId\":\"C\"\n
    \               }\n            ],\n            \"timeFrom\":null,\n            \"timeShift\":null,\n
    \           \"title\":\"Local Storage\",\n            \"transform\":\"table\",\n
    \           \"transparent\":false,\n            \"type\":\"table\"\n        },\n
    \       {  \n            \"aliasColors\":{  \n\n            },\n            \"bars\":false,\n
    \           \"dashLength\":10,\n            \"dashes\":false,\n            \"datasource\":\"Prometheus\",\n
    \           \"fill\":1,\n            \"gridPos\":{  \n                \"h\":9,\n
    \               \"w\":12,\n                \"x\":12,\n                \"y\":73\n
    \           },\n            \"id\":128,\n            \"legend\":{  \n                \"avg\":false,\n
    \               \"current\":false,\n                \"max\":false,\n                \"min\":false,\n
    \               \"show\":true,\n                \"total\":false,\n                \"values\":false\n
    \           },\n            \"lines\":true,\n            \"linewidth\":1,\n            \"links\":[
    \ \n\n            ],\n            \"nullPointMode\":\"null\",\n            \"percentage\":false,\n
    \           \"pointradius\":5,\n            \"points\":false,\n            \"renderer\":\"flot\",\n
    \           \"seriesOverrides\":[  \n\n            ],\n            \"spaceLength\":10,\n
    \           \"stack\":false,\n            \"steppedLine\":false,\n            \"targets\":[
    \ \n                {  \n                    \"expr\":\"SUM(container_fs_usage_bytes{id=\\\"/\\\"})
    / SUM(container_fs_limit_bytes{id=\\\"/\\\"})\",\n                    \"format\":\"time_series\",\n
    \                   \"intervalFactor\":1,\n                    \"legendFormat\":\"reads\",\n
    \                   \"refId\":\"D\"\n                }\n            ],\n            \"thresholds\":[
    \ \n\n            ],\n            \"timeFrom\":null,\n            \"timeShift\":null,\n
    \           \"title\":\"Local storage utilization\",\n            \"tooltip\":{
    \ \n                \"shared\":true,\n                \"sort\":0,\n                \"value_type\":\"individual\"\n
    \           },\n            \"type\":\"graph\",\n            \"xaxis\":{  \n                \"buckets\":null,\n
    \               \"mode\":\"time\",\n                \"name\":null,\n                \"show\":true,\n
    \               \"values\":[  \n\n                ]\n            },\n            \"yaxes\":[
    \ \n                {  \n                    \"format\":\"percent\",\n                    \"label\":\"IOPS\",\n
    \                   \"logBase\":1,\n                    \"max\":null,\n                    \"min\":null,\n
    \                   \"show\":true\n                },\n                {  \n                    \"format\":\"short\",\n
    \                   \"label\":null,\n                    \"logBase\":1,\n                    \"max\":null,\n
    \                   \"min\":null,\n                    \"show\":true\n                }\n
    \           ],\n            \"yaxis\":{  \n                \"align\":false,\n
    \               \"alignLevel\":null\n            }\n        },\n        {  \n
    \           \"columns\":[  \n                {  \n                    \"text\":\"Avg\",\n
    \                   \"value\":\"avg\"\n                }\n            ],\n            \"datasource\":\"Prometheus\",\n
    \           \"fontSize\":\"100%\",\n            \"gridPos\":{  \n                \"h\":10,\n
    \               \"w\":12,\n                \"x\":0,\n                \"y\":82\n
    \           },\n            \"hideTimeOverride\":true,\n            \"id\":94,\n
    \           \"links\":[  \n\n            ],\n            \"pageSize\":10,\n            \"repeatDirection\":\"v\",\n
    \           \"scroll\":true,\n            \"showHeader\":true,\n            \"sort\":{
    \ \n                \"col\":2,\n                \"desc\":true\n            },\n
    \           \"styles\":[  \n                {  \n                    \"alias\":\"Namespace\",\n
    \                   \"colorMode\":null,\n                    \"colors\":[  \n
    \                       \"rgba(245, 54, 54, 0.9)\",\n                        \"rgba(237,
    129, 40, 0.89)\",\n                        \"rgba(50, 172, 45, 0.97)\"\n                    ],\n
    \                   \"dateFormat\":\"YYYY-MM-DD HH:mm:ss\",\n                    \"decimals\":2,\n
    \                   \"link\":true,\n                    \"linkTooltip\":\"View
    namespace cost metrics\",\n                    \"linkUrl\":\"d/at-cost-analysis-namespace2/namespace-cost-metrics?&var-namespace=$__cell\",\n
    \                   \"mappingType\":1,\n                    \"pattern\":\"namespace\",\n
    \                   \"thresholds\":[  \n\n                    ],\n                    \"type\":\"string\",\n
    \                   \"unit\":\"short\"\n                },\n                {
    \ \n                    \"alias\":\"PVC Name\",\n                    \"colorMode\":null,\n
    \                   \"colors\":[  \n                        \"rgba(245, 54, 54,
    0.9)\",\n                        \"rgba(237, 129, 40, 0.89)\",\n                        \"rgba(50,
    172, 45, 0.97)\"\n                    ],\n                    \"dateFormat\":\"YYYY-MM-DD
    HH:mm:ss\",\n                    \"decimals\":2,\n                    \"mappingType\":1,\n
    \                   \"pattern\":\"persistentvolumeclaim\",\n                    \"thresholds\":[
    \ \n\n                    ],\n                    \"type\":\"number\",\n                    \"unit\":\"short\"\n
    \               },\n                {  \n                    \"alias\":\"Storage
    Class\",\n                    \"colorMode\":null,\n                    \"colors\":[
    \ \n                        \"rgba(245, 54, 54, 0.9)\",\n                        \"rgba(237,
    129, 40, 0.89)\",\n                        \"rgba(50, 172, 45, 0.97)\"\n                    ],\n
    \                   \"dateFormat\":\"YYYY-MM-DD HH:mm:ss\",\n                    \"decimals\":2,\n
    \                   \"mappingType\":1,\n                    \"pattern\":\"storageclass\",\n
    \                   \"thresholds\":[  \n\n                    ],\n                    \"type\":\"number\",\n
    \                   \"unit\":\"short\"\n                },\n                {
    \ \n                    \"alias\":\"Cost\",\n                    \"colorMode\":null,\n
    \                   \"colors\":[  \n                        \"rgba(245, 54, 54,
    0.9)\",\n                        \"rgba(237, 129, 40, 0.89)\",\n                        \"rgba(50,
    172, 45, 0.97)\"\n                    ],\n                    \"dateFormat\":\"YYYY-MM-DD
    HH:mm:ss\",\n                    \"decimals\":2,\n                    \"mappingType\":1,\n
    \                   \"pattern\":\"Value\",\n                    \"thresholds\":[
    \ \n\n                    ],\n                    \"type\":\"number\",\n                    \"unit\":\"currencyUSD\"\n
    \               },\n                {  \n                    \"alias\":\"\",\n
    \                   \"colorMode\":null,\n                    \"colors\":[  \n
    \                       \"rgba(245, 54, 54, 0.9)\",\n                        \"rgba(237,
    129, 40, 0.89)\",\n                        \"rgba(50, 172, 45, 0.97)\"\n                    ],\n
    \                   \"dateFormat\":\"YYYY-MM-DD HH:mm:ss\",\n                    \"decimals\":2,\n
    \                   \"mappingType\":1,\n                    \"pattern\":\"Time\",\n
    \                   \"thresholds\":[  \n\n                    ],\n                    \"type\":\"hidden\",\n
    \                   \"unit\":\"short\"\n                },\n                {
    \ \n                    \"alias\":\"Cost\",\n                    \"colorMode\":null,\n
    \                   \"colors\":[  \n                        \"rgba(245, 54, 54,
    0.9)\",\n                        \"rgba(237, 129, 40, 0.89)\",\n                        \"rgba(50,
    172, 45, 0.97)\"\n                    ],\n                    \"dateFormat\":\"YYYY-MM-DD
    HH:mm:ss\",\n                    \"decimals\":2,\n                    \"mappingType\":1,\n
    \                   \"pattern\":\"Value #A\",\n                    \"thresholds\":[
    \ \n\n                    ],\n                    \"type\":\"number\",\n                    \"unit\":\"currencyUSD\"\n
    \               },\n                {  \n                    \"alias\":\"Usage\",\n
    \                   \"colorMode\":null,\n                    \"colors\":[  \n
    \                       \"rgba(245, 54, 54, 0.9)\",\n                        \"rgba(237,
    129, 40, 0.89)\",\n                        \"rgba(50, 172, 45, 0.97)\"\n                    ],\n
    \                   \"dateFormat\":\"YYYY-MM-DD HH:mm:ss\",\n                    \"decimals\":2,\n
    \                   \"mappingType\":1,\n                    \"pattern\":\"Value
    #B\",\n                    \"thresholds\":[  \n\n                    ],\n                    \"type\":\"number\",\n
    \                   \"unit\":\"percentunit\"\n                },\n                {
    \ \n                    \"alias\":\"Size (GB)\",\n                    \"colorMode\":null,\n
    \                   \"colors\":[  \n                        \"rgba(245, 54, 54,
    0.9)\",\n                        \"rgba(237, 129, 40, 0.89)\",\n                        \"rgba(50,
    172, 45, 0.97)\"\n                    ],\n                    \"dateFormat\":\"YYYY-MM-DD
    HH:mm:ss\",\n                    \"decimals\":2,\n                    \"mappingType\":1,\n
    \                   \"pattern\":\"Value #C\",\n                    \"thresholds\":[
    \ \n\n                    ],\n                    \"type\":\"number\",\n                    \"unit\":\"short\"\n
    \               }\n            ],\n            \"targets\":[  \n                {
    \ \n                    \"expr\":\"sum (\\n sum(kube_persistentvolumeclaim_info{storageclass=~\\\".*ssd.*\\\"})
    by (persistentvolumeclaim, namespace, storageclass)\\n * on (persistentvolumeclaim,
    namespace) group_right(storageclass)\\n sum(kube_persistentvolumeclaim_resource_requests_storage_bytes{storageclass=~\\\".*ssd.*\\\"})
    by (persistentvolumeclaim, namespace)\\n) by (namespace,persistentvolumeclaim,storageclass)
    / 1024 / 1024 /1024\\n\\nor\\n\\nsum (\\n sum(kube_persistentvolumeclaim_info{storageclass!~\\\".*ssd.*\\\"})
    by (persistentvolumeclaim, namespace, storageclass)\\n * on (persistentvolumeclaim,
    namespace) group_right(storageclass)\\n sum(kube_persistentvolumeclaim_resource_requests_storage_bytes{storageclass!~\\\".*ssd.*\\\"})
    by (persistentvolumeclaim, namespace)\\n) by (namespace,persistentvolumeclaim,storageclass)
    / 1024 / 1024 /1024\\n\\n\\n\",\n                    \"format\":\"table\",\n                    \"instant\":true,\n
    \                   \"intervalFactor\":1,\n                    \"refId\":\"C\"\n
    \               },\n                {  \n                    \"expr\":\"sum (\\n
    sum(kube_persistentvolumeclaim_info{storageclass=~\\\".*ssd.*\\\"}) by (persistentvolumeclaim,
    namespace, storageclass)\\n * on (persistentvolumeclaim, namespace) group_right(storageclass)\\n
    sum(kube_persistentvolumeclaim_resource_requests_storage_bytes{storageclass=~\\\".*ssd.*\\\"})
    by (persistentvolumeclaim, namespace)\\n) by (namespace,persistentvolumeclaim,storageclass)
    / 1024 / 1024 /1024 * $costStorageSSD\\n\\nor\\n\\nsum (\\n sum(kube_persistentvolumeclaim_info{storageclass!~\\\".*ssd.*\\\"})
    by (persistentvolumeclaim, namespace, storageclass)\\n * on (persistentvolumeclaim,
    namespace) group_right(storageclass)\\n sum(kube_persistentvolumeclaim_resource_requests_storage_bytes{storageclass!~\\\".*ssd.*\\\"})
    by (persistentvolumeclaim, namespace)\\n) by (namespace,persistentvolumeclaim,storageclass)
    / 1024 / 1024 /1024 * $costStorageStandard\\n\",\n                    \"format\":\"table\",\n
    \                   \"hide\":false,\n                    \"instant\":true,\n                    \"interval\":\"\",\n
    \                   \"intervalFactor\":1,\n                    \"legendFormat\":\"{{
    persistentvolumeclaim }}\",\n                    \"refId\":\"A\"\n                },\n
    \               {  \n                    \"expr\":\"sum(kubelet_volume_stats_used_bytes)
    by (persistentvolumeclaim, namespace) \\n/\\nsum (\\n sum(kube_persistentvolumeclaim_info{storageclass!~\\\".*ssd.*\\\"})
    by (persistentvolumeclaim, namespace, storageclass)\\n * on (persistentvolumeclaim,
    namespace) group_right(storageclass)\\n sum(kube_persistentvolumeclaim_resource_requests_storage_bytes{storageclass!~\\\".*ssd.*\\\"})
    by (persistentvolumeclaim, namespace)\\n) by (namespace,persistentvolumeclaim)\",\n
    \                   \"format\":\"table\",\n                    \"instant\":true,\n
    \                   \"intervalFactor\":1,\n                    \"refId\":\"B\"\n
    \               }\n            ],\n            \"timeFrom\":null,\n            \"timeShift\":null,\n
    \           \"title\":\"Persistent Volume Claims\",\n            \"transform\":\"table\",\n
    \           \"transparent\":false,\n            \"type\":\"table\"\n        },\n
    \       {  \n            \"aliasColors\":{  \n\n            },\n            \"bars\":false,\n
    \           \"dashLength\":10,\n            \"dashes\":false,\n            \"datasource\":\"Prometheus\",\n
    \           \"fill\":1,\n            \"gridPos\":{  \n                \"h\":10,\n
    \               \"w\":12,\n                \"x\":12,\n                \"y\":82\n
    \           },\n            \"id\":132,\n            \"legend\":{  \n                \"avg\":false,\n
    \               \"current\":false,\n                \"max\":false,\n                \"min\":false,\n
    \               \"show\":true,\n                \"total\":false,\n                \"values\":false\n
    \           },\n            \"lines\":true,\n            \"linewidth\":1,\n            \"links\":[
    \ \n\n            ],\n            \"nullPointMode\":\"null\",\n            \"percentage\":false,\n
    \           \"pointradius\":5,\n            \"points\":false,\n            \"renderer\":\"flot\",\n
    \           \"seriesOverrides\":[  \n\n            ],\n            \"spaceLength\":10,\n
    \           \"stack\":false,\n            \"steppedLine\":false,\n            \"targets\":[
    \ \n                {  \n                    \"expr\":\"SUM(rate(node_disk_reads_completed_total[10m]))
    or SUM(rate(node_disk_reads_completed[10m]))\\n\",\n                    \"format\":\"time_series\",\n
    \                   \"intervalFactor\":1,\n                    \"legendFormat\":\"reads\",\n
    \                   \"refId\":\"D\"\n                },\n                {  \n
    \                   \"expr\":\"SUM(rate(node_disk_writes_completed_total[10m]))
    or SUM(rate(node_disk_writes_completed[10m]))\",\n                    \"format\":\"time_series\",\n
    \                   \"intervalFactor\":1,\n                    \"legendFormat\":\"writes\",\n
    \                   \"refId\":\"A\"\n                }\n            ],\n            \"thresholds\":[
    \ \n\n            ],\n            \"timeFrom\":null,\n            \"timeShift\":null,\n
    \           \"title\":\"Disk IOPS\",\n            \"tooltip\":{  \n                \"shared\":true,\n
    \               \"sort\":0,\n                \"value_type\":\"individual\"\n            },\n
    \           \"type\":\"graph\",\n            \"xaxis\":{  \n                \"buckets\":null,\n
    \               \"mode\":\"time\",\n                \"name\":null,\n                \"show\":true,\n
    \               \"values\":[  \n\n                ]\n            },\n            \"yaxes\":[
    \ \n                {  \n                    \"format\":\"none\",\n                    \"label\":\"IOPS\",\n
    \                   \"logBase\":1,\n                    \"max\":null,\n                    \"min\":null,\n
    \                   \"show\":true\n                },\n                {  \n                    \"format\":\"short\",\n
    \                   \"label\":null,\n                    \"logBase\":1,\n                    \"max\":null,\n
    \                   \"min\":null,\n                    \"show\":true\n                }\n
    \           ],\n            \"yaxis\":{  \n                \"align\":false,\n
    \               \"alignLevel\":null\n            }\n        },\n        {  \n
    \           \"aliasColors\":{  \n\n            },\n            \"bars\":false,\n
    \           \"dashLength\":10,\n            \"dashes\":false,\n            \"datasource\":\"Prometheus\",\n
    \           \"fill\":1,\n            \"gridPos\":{  \n                \"h\":9,\n
    \               \"w\":24,\n                \"x\":0,\n                \"y\":92\n
    \           },\n            \"id\":122,\n            \"legend\":{  \n                \"avg\":false,\n
    \               \"current\":false,\n                \"max\":false,\n                \"min\":false,\n
    \               \"show\":true,\n                \"total\":false,\n                \"values\":false\n
    \           },\n            \"lines\":true,\n            \"linewidth\":1,\n            \"links\":[
    \ \n\n            ],\n            \"nullPointMode\":\"null\",\n            \"percentage\":false,\n
    \           \"pointradius\":5,\n            \"points\":false,\n            \"renderer\":\"flot\",\n
    \           \"seriesOverrides\":[  \n\n            ],\n            \"spaceLength\":10,\n
    \           \"stack\":false,\n            \"steppedLine\":false,\n            \"targets\":[
    \ \n                {  \n                    \"expr\":\"SUM( kubelet_volume_stats_inodes_used
    / kubelet_volume_stats_inodes) by (persistentvolumeclaim) * 100\",\n                    \"format\":\"time_series\",\n
    \                   \"intervalFactor\":1,\n                    \"legendFormat\":\"\",\n
    \                   \"refId\":\"D\"\n                }\n            ],\n            \"thresholds\":[
    \ \n\n            ],\n            \"timeFrom\":null,\n            \"timeShift\":null,\n
    \           \"title\":\"Inode usage\",\n            \"tooltip\":{  \n                \"shared\":true,\n
    \               \"sort\":0,\n                \"value_type\":\"individual\"\n            },\n
    \           \"type\":\"graph\",\n            \"xaxis\":{  \n                \"buckets\":null,\n
    \               \"mode\":\"time\",\n                \"name\":null,\n                \"show\":true,\n
    \               \"values\":[  \n\n                ]\n            },\n            \"yaxes\":[
    \ \n                {  \n                    \"format\":\"percent\",\n                    \"label\":null,\n
    \                   \"logBase\":1,\n                    \"max\":null,\n                    \"min\":null,\n
    \                   \"show\":true\n                },\n                {  \n                    \"format\":\"short\",\n
    \                   \"label\":null,\n                    \"logBase\":1,\n                    \"max\":null,\n
    \                   \"min\":null,\n                    \"show\":true\n                }\n
    \           ],\n            \"yaxis\":{  \n                \"align\":false,\n
    \               \"alignLevel\":null\n            }\n        },\n        {  \n
    \           \"collapsed\":false,\n            \"gridPos\":{  \n                \"h\":1,\n
    \               \"w\":24,\n                \"x\":0,\n                \"y\":101\n
    \           },\n            \"id\":127,\n            \"panels\":[  \n\n            ],\n
    \           \"title\":\"Network\",\n            \"type\":\"row\"\n        },\n
    \       {  \n            \"aliasColors\":{  \n\n            },\n            \"bars\":false,\n
    \           \"dashLength\":10,\n            \"dashes\":false,\n            \"datasource\":\"Prometheus\",\n
    \           \"fill\":1,\n            \"gridPos\":{  \n                \"h\":9,\n
    \               \"w\":24,\n                \"x\":0,\n                \"y\":102\n
    \           },\n            \"id\":123,\n            \"legend\":{  \n                \"avg\":false,\n
    \               \"current\":false,\n                \"max\":false,\n                \"min\":false,\n
    \               \"show\":true,\n                \"total\":false,\n                \"values\":false\n
    \           },\n            \"lines\":true,\n            \"linewidth\":1,\n            \"links\":[
    \ \n\n            ],\n            \"nullPointMode\":\"null\",\n            \"percentage\":false,\n
    \           \"pointradius\":5,\n            \"points\":false,\n            \"renderer\":\"flot\",\n
    \           \"seriesOverrides\":[  \n\n            ],\n            \"spaceLength\":10,\n
    \           \"stack\":false,\n            \"steppedLine\":false,\n            \"targets\":[
    \ \n                {  \n                    \"expr\":\"sum (rate (node_network_transmit_bytes_total{}[60m]))\\n\",\n
    \                   \"format\":\"time_series\",\n                    \"intervalFactor\":1,\n
    \                   \"legendFormat\":\"node_out\",\n                    \"refId\":\"B\"\n
    \               },\n                {  \n                    \"expr\":\"SUM (
    rate(node_network_transmit_bytes_total{device=\\\"eth0\\\"}[60m]))\",\n                    \"format\":\"time_series\",\n
    \                   \"instant\":false,\n                    \"intervalFactor\":1,\n
    \                   \"legendFormat\":\"eth0 out\",\n                    \"refId\":\"C\"\n
    \               }\n            ],\n            \"thresholds\":[  \n\n            ],\n
    \           \"timeFrom\":null,\n            \"timeShift\":null,\n            \"title\":\"Node
    network transmit\",\n            \"tooltip\":{  \n                \"shared\":true,\n
    \               \"sort\":0,\n                \"value_type\":\"individual\"\n            },\n
    \           \"type\":\"graph\",\n            \"xaxis\":{  \n                \"buckets\":null,\n
    \               \"mode\":\"time\",\n                \"name\":null,\n                \"show\":true,\n
    \               \"values\":[  \n\n                ]\n            },\n            \"yaxes\":[
    \ \n                {  \n                    \"format\":\"decbytes\",\n                    \"label\":null,\n
    \                   \"logBase\":1,\n                    \"max\":null,\n                    \"min\":null,\n
    \                   \"show\":true\n                },\n                {  \n                    \"format\":\"short\",\n
    \                   \"label\":null,\n                    \"logBase\":1,\n                    \"max\":null,\n
    \                   \"min\":null,\n                    \"show\":true\n                }\n
    \           ],\n            \"yaxis\":{  \n                \"align\":false,\n
    \               \"alignLevel\":null\n            }\n        }\n    ],\n    \"refresh\":\"15m\",\n
    \   \"schemaVersion\":16,\n    \"style\":\"dark\",\n    \"tags\":[  \n        \"cost\",\n
    \       \"utilization\",\n        \"metrics\"\n    ],\n    \"templating\":{  \n
    \       \"list\":[  \n            {  \n                \"current\":{  \n                    \"text\":\"23.076\",\n
    \                   \"value\":\"23.076\"\n                },\n                \"hide\":0,\n
    \               \"label\":\"CPU\",\n                \"name\":\"costcpu\",\n                \"options\":[
    \ \n                    {  \n                        \"text\":\"23.076\",\n                        \"value\":\"23.076\"\n
    \                   }\n                ],\n                \"query\":\"23.076\",\n
    \               \"skipUrlSync\":false,\n                \"type\":\"constant\"\n
    \           },\n            {  \n                \"current\":{  \n                    \"text\":\"5.10\",\n
    \                   \"value\":\"5.10\"\n                },\n                \"hide\":0,\n
    \               \"label\":\"PE CPU\",\n                \"name\":\"costpcpu\",\n
    \               \"options\":[  \n                    {  \n                        \"text\":\"5.10\",\n
    \                       \"value\":\"5.10\"\n                    }\n                ],\n
    \               \"query\":\"5.10\",\n                \"skipUrlSync\":false,\n
    \               \"type\":\"constant\"\n            },\n            {  \n                \"current\":{
    \ \n                    \"text\":\"3.25\",\n                    \"value\":\"3.25\"\n
    \               },\n                \"hide\":0,\n                \"label\":\"RAM\",\n
    \               \"name\":\"costram\",\n                \"options\":[  \n                    {
    \ \n                        \"text\":\"3.25\",\n                        \"value\":\"3.25\"\n
    \                   }\n                ],\n                \"query\":\"3.25\",\n
    \               \"skipUrlSync\":false,\n                \"type\":\"constant\"\n
    \           },\n            {  \n                \"current\":{  \n                    \"text\":\"0.6862\",\n
    \                   \"value\":\"0.6862\"\n                },\n                \"hide\":0,\n
    \               \"label\":\"PE RAM\",\n                \"name\":\"costpram\",\n
    \               \"options\":[  \n                    {  \n                        \"text\":\"0.6862\",\n
    \                       \"value\":\"0.6862\"\n                    }\n                ],\n
    \               \"query\":\"0.6862\",\n                \"skipUrlSync\":false,\n
    \               \"type\":\"constant\"\n            },\n            {  \n                \"current\":{
    \ \n                    \"text\":\"0.040\",\n                    \"value\":\"0.040\"\n
    \               },\n                \"hide\":0,\n                \"label\":\"Storage\",\n
    \               \"name\":\"costStorageStandard\",\n                \"options\":[
    \ \n                    {  \n                        \"text\":\"0.040\",\n                        \"value\":\"0.040\"\n
    \                   }\n                ],\n                \"query\":\"0.040\",\n
    \               \"skipUrlSync\":false,\n                \"type\":\"constant\"\n
    \           },\n            {  \n                \"current\":{  \n                    \"text\":\".17\",\n
    \                   \"value\":\".17\"\n                },\n                \"hide\":0,\n
    \               \"label\":\"SSD\",\n                \"name\":\"costStorageSSD\",\n
    \               \"options\":[  \n                    {  \n                        \"text\":\".17\",\n
    \                       \"value\":\".17\"\n                    }\n                ],\n
    \               \"query\":\".17\",\n                \"skipUrlSync\":false,\n                \"type\":\"constant\"\n
    \           },\n            {  \n                \"current\":{  \n                    \"text\":\".12\",\n
    \                   \"value\":\".12\"\n                },\n                \"hide\":0,\n
    \               \"label\":\"Egress\",\n                \"name\":\"costEgress\",\n
    \               \"options\":[  \n                    {  \n                        \"selected\":true,\n
    \                       \"text\":\".12\",\n                        \"value\":\".12\"\n
    \                   }\n                ],\n                \"query\":\".12\",\n
    \               \"skipUrlSync\":false,\n                \"type\":\"constant\"\n
    \           },\n            {  \n                \"current\":{  \n                    \"text\":\"30\",\n
    \                   \"value\":\"30\"\n                },\n                \"hide\":0,\n
    \               \"label\":\"Discount\",\n                \"name\":\"costDiscount\",\n
    \               \"options\":[  \n                    {  \n                        \"text\":\"30\",\n
    \                       \"value\":\"30\"\n                    }\n                ],\n
    \               \"query\":\"30\",\n                \"skipUrlSync\":false,\n                \"type\":\"constant\"\n
    \           }\n        ]\n    },\n    \"time\":{  \n        \"from\":\"now-24h\",\n
    \       \"to\":\"now\"\n    },\n    \"timepicker\":{  \n        \"hidden\":false,\n
    \       \"refresh_intervals\":[  \n            \"5s\",\n            \"10s\",\n
    \           \"30s\",\n            \"1m\",\n            \"5m\",\n            \"15m\",\n
    \           \"30m\",\n            \"1h\",\n            \"2h\",\n            \"1d\"\n
    \       ],\n        \"time_options\":[  \n            \"5m\",\n            \"15m\",\n
    \           \"1h\",\n            \"6h\",\n            \"12h\",\n            \"24h\",\n
    \           \"2d\",\n            \"7d\",\n            \"30d\"\n        ]\n    },\n
    \   \"timezone\":\"browser\",\n    \"title\":\"Cluster cost & utilization metrics\",\n
    \   \"uid\":\"cluster-costs\",\n    \"version\":1\n}"
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app: cost-analyzer
    app.kubernetes.io/instance: kubecost
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: cost-analyzer
    grafana_dashboard: "1"
    helm.sh/chart: cost-analyzer-1.32.0
  name: cluster-utilization-dashboard
  selfLink: /api/v1/namespaces/kubecost/configmaps/cluster-utilization-dashboard
